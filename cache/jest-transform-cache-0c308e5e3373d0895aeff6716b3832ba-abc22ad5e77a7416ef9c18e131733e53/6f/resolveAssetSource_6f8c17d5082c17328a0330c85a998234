608c0209fba6b20e646bfd24f6414119
'use strict';

var AssetSourceResolver = require('./AssetSourceResolver');
var _require = require('./AssetUtils'),
  pickScale = _require.pickScale;
var AssetRegistry = require('@react-native/assets/registry');
var _customSourceTransformer, _serverURL, _scriptURL;
var _sourceCodeScriptURL;
function getSourceCodeScriptURL() {
  if (_sourceCodeScriptURL) {
    return _sourceCodeScriptURL;
  }
  var sourceCode = global.nativeExtensions && global.nativeExtensions.SourceCode;
  if (!sourceCode) {
    sourceCode = require('../NativeModules/specs/NativeSourceCode').default;
  }
  _sourceCodeScriptURL = sourceCode.getConstants().scriptURL;
  return _sourceCodeScriptURL;
}
function getDevServerURL() {
  if (_serverURL === undefined) {
    var sourceCodeScriptURL = getSourceCodeScriptURL();
    var match = sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\/\/.*?\//);
    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }
  return _serverURL;
}
function _coerceLocalScriptURL(scriptURL) {
  if (scriptURL) {
    if (scriptURL.startsWith('assets://')) {
      return null;
    }
    scriptURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    if (!scriptURL.includes('://')) {
      scriptURL = 'file://' + scriptURL;
    }
  }
  return scriptURL;
}
function getScriptURL() {
  if (_scriptURL === undefined) {
    _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());
  }
  return _scriptURL;
}
function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}
function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }
  var asset = AssetRegistry.getAssetByID(source);
  if (!asset) {
    return null;
  }
  var resolver = new AssetSourceResolver(getDevServerURL(), getScriptURL(), asset);
  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}
resolveAssetSource.pickScale = pickScale;
resolveAssetSource.setCustomSourceTransformer = setCustomSourceTransformer;
module.exports = resolveAssetSource;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBc3NldFNvdXJjZVJlc29sdmVyIiwicmVxdWlyZSIsInBpY2tTY2FsZSIsIkFzc2V0UmVnaXN0cnkiLCJfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIiLCJfc2VydmVyVVJMIiwiX3NjcmlwdFVSTCIsIl9zb3VyY2VDb2RlU2NyaXB0VVJMIiwiZ2V0U291cmNlQ29kZVNjcmlwdFVSTCIsInNvdXJjZUNvZGUiLCJnbG9iYWwiLCJuYXRpdmVFeHRlbnNpb25zIiwiU291cmNlQ29kZSIsImRlZmF1bHQiLCJnZXRDb25zdGFudHMiLCJzY3JpcHRVUkwiLCJnZXREZXZTZXJ2ZXJVUkwiLCJ1bmRlZmluZWQiLCJzb3VyY2VDb2RlU2NyaXB0VVJMIiwibWF0Y2giLCJfY29lcmNlTG9jYWxTY3JpcHRVUkwiLCJzdGFydHNXaXRoIiwic3Vic3RyaW5nIiwibGFzdEluZGV4T2YiLCJpbmNsdWRlcyIsImdldFNjcmlwdFVSTCIsInNldEN1c3RvbVNvdXJjZVRyYW5zZm9ybWVyIiwidHJhbnNmb3JtZXIiLCJyZXNvbHZlQXNzZXRTb3VyY2UiLCJzb3VyY2UiLCJhc3NldCIsImdldEFzc2V0QnlJRCIsInJlc29sdmVyIiwiZGVmYXVsdEFzc2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInJlc29sdmVBc3NldFNvdXJjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4vLyBSZXNvbHZlcyBhbiBhc3NldCBpbnRvIGEgYHNvdXJjZWAgZm9yIGBJbWFnZWAuXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUge1Jlc29sdmVkQXNzZXRTb3VyY2V9IGZyb20gJy4vQXNzZXRTb3VyY2VSZXNvbHZlcic7XG5cbmNvbnN0IEFzc2V0U291cmNlUmVzb2x2ZXIgPSByZXF1aXJlKCcuL0Fzc2V0U291cmNlUmVzb2x2ZXInKTtcbmNvbnN0IHtwaWNrU2NhbGV9ID0gcmVxdWlyZSgnLi9Bc3NldFV0aWxzJyk7XG5jb25zdCBBc3NldFJlZ2lzdHJ5ID0gcmVxdWlyZSgnQHJlYWN0LW5hdGl2ZS9hc3NldHMvcmVnaXN0cnknKTtcblxubGV0IF9jdXN0b21Tb3VyY2VUcmFuc2Zvcm1lciwgX3NlcnZlclVSTCwgX3NjcmlwdFVSTDtcblxubGV0IF9zb3VyY2VDb2RlU2NyaXB0VVJMOiA/c3RyaW5nO1xuZnVuY3Rpb24gZ2V0U291cmNlQ29kZVNjcmlwdFVSTCgpOiA/c3RyaW5nIHtcbiAgaWYgKF9zb3VyY2VDb2RlU2NyaXB0VVJMKSB7XG4gICAgcmV0dXJuIF9zb3VyY2VDb2RlU2NyaXB0VVJMO1xuICB9XG5cbiAgbGV0IHNvdXJjZUNvZGUgPVxuICAgIGdsb2JhbC5uYXRpdmVFeHRlbnNpb25zICYmIGdsb2JhbC5uYXRpdmVFeHRlbnNpb25zLlNvdXJjZUNvZGU7XG4gIGlmICghc291cmNlQ29kZSkge1xuICAgIHNvdXJjZUNvZGUgPSByZXF1aXJlKCcuLi9OYXRpdmVNb2R1bGVzL3NwZWNzL05hdGl2ZVNvdXJjZUNvZGUnKS5kZWZhdWx0O1xuICB9XG4gIF9zb3VyY2VDb2RlU2NyaXB0VVJMID0gc291cmNlQ29kZS5nZXRDb25zdGFudHMoKS5zY3JpcHRVUkw7XG4gIHJldHVybiBfc291cmNlQ29kZVNjcmlwdFVSTDtcbn1cblxuZnVuY3Rpb24gZ2V0RGV2U2VydmVyVVJMKCk6ID9zdHJpbmcge1xuICBpZiAoX3NlcnZlclVSTCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3Qgc291cmNlQ29kZVNjcmlwdFVSTCA9IGdldFNvdXJjZUNvZGVTY3JpcHRVUkwoKTtcbiAgICBjb25zdCBtYXRjaCA9XG4gICAgICBzb3VyY2VDb2RlU2NyaXB0VVJMICYmIHNvdXJjZUNvZGVTY3JpcHRVUkwubWF0Y2goL15odHRwcz86XFwvXFwvLio/XFwvLyk7XG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICAvLyBqc0J1bmRsZSB3YXMgbG9hZGVkIGZyb20gbmV0d29ya1xuICAgICAgX3NlcnZlclVSTCA9IG1hdGNoWzBdO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBqc0J1bmRsZSB3YXMgbG9hZGVkIGZyb20gZmlsZVxuICAgICAgX3NlcnZlclVSTCA9IG51bGw7XG4gICAgfVxuICB9XG4gIHJldHVybiBfc2VydmVyVVJMO1xufVxuXG5mdW5jdGlvbiBfY29lcmNlTG9jYWxTY3JpcHRVUkwoc2NyaXB0VVJMOiA/c3RyaW5nKTogP3N0cmluZyB7XG4gIGlmIChzY3JpcHRVUkwpIHtcbiAgICBpZiAoc2NyaXB0VVJMLnN0YXJ0c1dpdGgoJ2Fzc2V0czovLycpKSB7XG4gICAgICAvLyBhbmRyb2lkOiBydW5uaW5nIGZyb20gd2l0aGluIGFzc2V0cywgbm8gb2ZmbGluZSBwYXRoIHRvIHVzZVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHNjcmlwdFVSTCA9IHNjcmlwdFVSTC5zdWJzdHJpbmcoMCwgc2NyaXB0VVJMLmxhc3RJbmRleE9mKCcvJykgKyAxKTtcbiAgICBpZiAoIXNjcmlwdFVSTC5pbmNsdWRlcygnOi8vJykpIHtcbiAgICAgIC8vIEFkZCBmaWxlIHByb3RvY29sIGluIGNhc2Ugd2UgaGF2ZSBhbiBhYnNvbHV0ZSBmaWxlIHBhdGggYW5kIG5vdCBhIFVSTC5cbiAgICAgIC8vIFRoaXMgc2hvdWxkbid0IHJlYWxseSBiZSBuZWNlc3NhcnkuIHNjcmlwdFVSTCBzaG91bGQgYmUgYSBVUkwuXG4gICAgICBzY3JpcHRVUkwgPSAnZmlsZTovLycgKyBzY3JpcHRVUkw7XG4gICAgfVxuICB9XG4gIHJldHVybiBzY3JpcHRVUkw7XG59XG5cbmZ1bmN0aW9uIGdldFNjcmlwdFVSTCgpOiA/c3RyaW5nIHtcbiAgaWYgKF9zY3JpcHRVUkwgPT09IHVuZGVmaW5lZCkge1xuICAgIF9zY3JpcHRVUkwgPSBfY29lcmNlTG9jYWxTY3JpcHRVUkwoZ2V0U291cmNlQ29kZVNjcmlwdFVSTCgpKTtcbiAgfVxuICByZXR1cm4gX3NjcmlwdFVSTDtcbn1cblxuZnVuY3Rpb24gc2V0Q3VzdG9tU291cmNlVHJhbnNmb3JtZXIoXG4gIHRyYW5zZm9ybWVyOiAocmVzb2x2ZXI6IEFzc2V0U291cmNlUmVzb2x2ZXIpID0+IFJlc29sdmVkQXNzZXRTb3VyY2UsXG4pOiB2b2lkIHtcbiAgX2N1c3RvbVNvdXJjZVRyYW5zZm9ybWVyID0gdHJhbnNmb3JtZXI7XG59XG5cbi8qKlxuICogYHNvdXJjZWAgaXMgZWl0aGVyIGEgbnVtYmVyIChvcGFxdWUgdHlwZSByZXR1cm5lZCBieSByZXF1aXJlKCcuL2Zvby5wbmcnKSlcbiAqIG9yIGFuIGBJbWFnZVNvdXJjZWAgbGlrZSB7IHVyaTogJzxodHRwIGxvY2F0aW9uIHx8IGZpbGUgcGF0aD4nIH1cbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZUFzc2V0U291cmNlKHNvdXJjZTogYW55KTogP1Jlc29sdmVkQXNzZXRTb3VyY2Uge1xuICBpZiAodHlwZW9mIHNvdXJjZSA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgY29uc3QgYXNzZXQgPSBBc3NldFJlZ2lzdHJ5LmdldEFzc2V0QnlJRChzb3VyY2UpO1xuICBpZiAoIWFzc2V0KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCByZXNvbHZlciA9IG5ldyBBc3NldFNvdXJjZVJlc29sdmVyKFxuICAgIGdldERldlNlcnZlclVSTCgpLFxuICAgIGdldFNjcmlwdFVSTCgpLFxuICAgIGFzc2V0LFxuICApO1xuICBpZiAoX2N1c3RvbVNvdXJjZVRyYW5zZm9ybWVyKSB7XG4gICAgcmV0dXJuIF9jdXN0b21Tb3VyY2VUcmFuc2Zvcm1lcihyZXNvbHZlcik7XG4gIH1cbiAgcmV0dXJuIHJlc29sdmVyLmRlZmF1bHRBc3NldCgpO1xufVxuXG5yZXNvbHZlQXNzZXRTb3VyY2UucGlja1NjYWxlID0gcGlja1NjYWxlO1xucmVzb2x2ZUFzc2V0U291cmNlLnNldEN1c3RvbVNvdXJjZVRyYW5zZm9ybWVyID0gc2V0Q3VzdG9tU291cmNlVHJhbnNmb3JtZXI7XG5tb2R1bGUuZXhwb3J0cyA9IHJlc29sdmVBc3NldFNvdXJjZTtcbiJdLCJtYXBwaW5ncyI6IkFBWUEsWUFBWTs7QUFJWixJQUFNQSxtQkFBbUIsR0FBR0MsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0FBQzVELGVBQW9CQSxPQUFPLENBQUMsY0FBYyxDQUFDO0VBQXBDQyxTQUFTLFlBQVRBLFNBQVM7QUFDaEIsSUFBTUMsYUFBYSxHQUFHRixPQUFPLENBQUMsK0JBQStCLENBQUM7QUFFOUQsSUFBSUcsd0JBQXdCLEVBQUVDLFVBQVUsRUFBRUMsVUFBVTtBQUVwRCxJQUFJQyxvQkFBNkI7QUFDakMsU0FBU0Msc0JBQXNCLEdBQVk7RUFDekMsSUFBSUQsb0JBQW9CLEVBQUU7SUFDeEIsT0FBT0Esb0JBQW9CO0VBQzdCO0VBRUEsSUFBSUUsVUFBVSxHQUNaQyxNQUFNLENBQUNDLGdCQUFnQixJQUFJRCxNQUFNLENBQUNDLGdCQUFnQixDQUFDQyxVQUFVO0VBQy9ELElBQUksQ0FBQ0gsVUFBVSxFQUFFO0lBQ2ZBLFVBQVUsR0FBR1IsT0FBTyxDQUFDLHlDQUF5QyxDQUFDLENBQUNZLE9BQU87RUFDekU7RUFDQU4sb0JBQW9CLEdBQUdFLFVBQVUsQ0FBQ0ssWUFBWSxFQUFFLENBQUNDLFNBQVM7RUFDMUQsT0FBT1Isb0JBQW9CO0FBQzdCO0FBRUEsU0FBU1MsZUFBZSxHQUFZO0VBQ2xDLElBQUlYLFVBQVUsS0FBS1ksU0FBUyxFQUFFO0lBQzVCLElBQU1DLG1CQUFtQixHQUFHVixzQkFBc0IsRUFBRTtJQUNwRCxJQUFNVyxLQUFLLEdBQ1RELG1CQUFtQixJQUFJQSxtQkFBbUIsQ0FBQ0MsS0FBSyxDQUFDLG1CQUFtQixDQUFDO0lBQ3ZFLElBQUlBLEtBQUssRUFBRTtNQUVUZCxVQUFVLEdBQUdjLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDdkIsQ0FBQyxNQUFNO01BRUxkLFVBQVUsR0FBRyxJQUFJO0lBQ25CO0VBQ0Y7RUFDQSxPQUFPQSxVQUFVO0FBQ25CO0FBRUEsU0FBU2UscUJBQXFCLENBQUNMLFNBQWtCLEVBQVc7RUFDMUQsSUFBSUEsU0FBUyxFQUFFO0lBQ2IsSUFBSUEsU0FBUyxDQUFDTSxVQUFVLENBQUMsV0FBVyxDQUFDLEVBQUU7TUFFckMsT0FBTyxJQUFJO0lBQ2I7SUFDQU4sU0FBUyxHQUFHQSxTQUFTLENBQUNPLFNBQVMsQ0FBQyxDQUFDLEVBQUVQLFNBQVMsQ0FBQ1EsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsRSxJQUFJLENBQUNSLFNBQVMsQ0FBQ1MsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO01BRzlCVCxTQUFTLEdBQUcsU0FBUyxHQUFHQSxTQUFTO0lBQ25DO0VBQ0Y7RUFDQSxPQUFPQSxTQUFTO0FBQ2xCO0FBRUEsU0FBU1UsWUFBWSxHQUFZO0VBQy9CLElBQUluQixVQUFVLEtBQUtXLFNBQVMsRUFBRTtJQUM1QlgsVUFBVSxHQUFHYyxxQkFBcUIsQ0FBQ1osc0JBQXNCLEVBQUUsQ0FBQztFQUM5RDtFQUNBLE9BQU9GLFVBQVU7QUFDbkI7QUFFQSxTQUFTb0IsMEJBQTBCLENBQ2pDQyxXQUFtRSxFQUM3RDtFQUNOdkIsd0JBQXdCLEdBQUd1QixXQUFXO0FBQ3hDO0FBTUEsU0FBU0Msa0JBQWtCLENBQUNDLE1BQVcsRUFBd0I7RUFDN0QsSUFBSSxPQUFPQSxNQUFNLEtBQUssUUFBUSxFQUFFO0lBQzlCLE9BQU9BLE1BQU07RUFDZjtFQUVBLElBQU1DLEtBQUssR0FBRzNCLGFBQWEsQ0FBQzRCLFlBQVksQ0FBQ0YsTUFBTSxDQUFDO0VBQ2hELElBQUksQ0FBQ0MsS0FBSyxFQUFFO0lBQ1YsT0FBTyxJQUFJO0VBQ2I7RUFFQSxJQUFNRSxRQUFRLEdBQUcsSUFBSWhDLG1CQUFtQixDQUN0Q2dCLGVBQWUsRUFBRSxFQUNqQlMsWUFBWSxFQUFFLEVBQ2RLLEtBQUssQ0FDTjtFQUNELElBQUkxQix3QkFBd0IsRUFBRTtJQUM1QixPQUFPQSx3QkFBd0IsQ0FBQzRCLFFBQVEsQ0FBQztFQUMzQztFQUNBLE9BQU9BLFFBQVEsQ0FBQ0MsWUFBWSxFQUFFO0FBQ2hDO0FBRUFMLGtCQUFrQixDQUFDMUIsU0FBUyxHQUFHQSxTQUFTO0FBQ3hDMEIsa0JBQWtCLENBQUNGLDBCQUEwQixHQUFHQSwwQkFBMEI7QUFDMUVRLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHUCxrQkFBa0IifQ==