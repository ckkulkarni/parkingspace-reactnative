060ac0ac22b6a1733c2b69fe1d0408a0
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _View = _interopRequireDefault(require("../../Components/View/View"));
var _StyleSheet = _interopRequireDefault(require("../../StyleSheet/StyleSheet"));
var _Text = _interopRequireDefault(require("../../Text/Text"));
var _DeviceInfo = _interopRequireDefault(require("../../Utilities/DeviceInfo"));
var _LogBoxButton = _interopRequireDefault(require("./LogBoxButton"));
var LogBoxStyle = _interopRequireWildcard(require("./LogBoxStyle"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function LogBoxInspectorFooter(props) {
  if (props.level === 'syntax') {
    return (0, _jsxRuntime.jsx)(_View.default, {
      style: styles.root,
      children: (0, _jsxRuntime.jsx)(_View.default, {
        style: styles.button,
        children: (0, _jsxRuntime.jsx)(_Text.default, {
          style: styles.syntaxErrorText,
          children: "This error cannot be dismissed."
        })
      })
    });
  }
  return (0, _jsxRuntime.jsxs)(_View.default, {
    style: styles.root,
    children: [(0, _jsxRuntime.jsx)(FooterButton, {
      text: "Dismiss",
      onPress: props.onDismiss
    }), (0, _jsxRuntime.jsx)(FooterButton, {
      text: "Minimize",
      onPress: props.onMinimize
    })]
  });
}
function FooterButton(props) {
  return (0, _jsxRuntime.jsx)(_LogBoxButton.default, {
    backgroundColor: {
      default: 'transparent',
      pressed: LogBoxStyle.getBackgroundDarkColor()
    },
    onPress: props.onPress,
    style: buttonStyles.safeArea,
    children: (0, _jsxRuntime.jsx)(_View.default, {
      style: buttonStyles.content,
      children: (0, _jsxRuntime.jsx)(_Text.default, {
        style: buttonStyles.label,
        children: props.text
      })
    })
  });
}
var buttonStyles = _StyleSheet.default.create({
  safeArea: {
    flex: 1,
    paddingBottom: _DeviceInfo.default.getConstants().isIPhoneX_deprecated ? 30 : 0
  },
  content: {
    alignItems: 'center',
    height: 48,
    justifyContent: 'center'
  },
  label: {
    color: LogBoxStyle.getTextColor(1),
    fontSize: 14,
    includeFontPadding: false,
    lineHeight: 20
  }
});
var styles = _StyleSheet.default.create({
  root: {
    backgroundColor: LogBoxStyle.getBackgroundColor(1),
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: -2
    },
    shadowRadius: 2,
    shadowOpacity: 0.5,
    flexDirection: 'row'
  },
  button: {
    flex: 1
  },
  syntaxErrorText: {
    textAlign: 'center',
    width: '100%',
    height: 48,
    fontSize: 14,
    lineHeight: 20,
    paddingTop: 20,
    paddingBottom: 50,
    fontStyle: 'italic',
    color: LogBoxStyle.getTextColor(0.6)
  }
});
var _default = LogBoxInspectorFooter;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2dCb3hJbnNwZWN0b3JGb290ZXIiLCJwcm9wcyIsImxldmVsIiwic3R5bGVzIiwicm9vdCIsImJ1dHRvbiIsInN5bnRheEVycm9yVGV4dCIsIm9uRGlzbWlzcyIsIm9uTWluaW1pemUiLCJGb290ZXJCdXR0b24iLCJkZWZhdWx0IiwicHJlc3NlZCIsIkxvZ0JveFN0eWxlIiwiZ2V0QmFja2dyb3VuZERhcmtDb2xvciIsIm9uUHJlc3MiLCJidXR0b25TdHlsZXMiLCJzYWZlQXJlYSIsImNvbnRlbnQiLCJsYWJlbCIsInRleHQiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleCIsInBhZGRpbmdCb3R0b20iLCJEZXZpY2VJbmZvIiwiZ2V0Q29uc3RhbnRzIiwiaXNJUGhvbmVYX2RlcHJlY2F0ZWQiLCJhbGlnbkl0ZW1zIiwiaGVpZ2h0IiwianVzdGlmeUNvbnRlbnQiLCJjb2xvciIsImdldFRleHRDb2xvciIsImZvbnRTaXplIiwiaW5jbHVkZUZvbnRQYWRkaW5nIiwibGluZUhlaWdodCIsImJhY2tncm91bmRDb2xvciIsImdldEJhY2tncm91bmRDb2xvciIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJzaGFkb3dSYWRpdXMiLCJzaGFkb3dPcGFjaXR5IiwiZmxleERpcmVjdGlvbiIsInRleHRBbGlnbiIsInBhZGRpbmdUb3AiLCJmb250U3R5bGUiXSwic291cmNlcyI6WyJMb2dCb3hJbnNwZWN0b3JGb290ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCB0eXBlIHtMb2dMZXZlbH0gZnJvbSAnLi4vRGF0YS9Mb2dCb3hMb2cnO1xuXG5pbXBvcnQgVmlldyBmcm9tICcuLi8uLi9Db21wb25lbnRzL1ZpZXcvVmlldyc7XG5pbXBvcnQgU3R5bGVTaGVldCBmcm9tICcuLi8uLi9TdHlsZVNoZWV0L1N0eWxlU2hlZXQnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi4vLi4vVGV4dC9UZXh0JztcbmltcG9ydCBEZXZpY2VJbmZvIGZyb20gJy4uLy4uL1V0aWxpdGllcy9EZXZpY2VJbmZvJztcbmltcG9ydCBMb2dCb3hCdXR0b24gZnJvbSAnLi9Mb2dCb3hCdXR0b24nO1xuaW1wb3J0ICogYXMgTG9nQm94U3R5bGUgZnJvbSAnLi9Mb2dCb3hTdHlsZSc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSAkUmVhZE9ubHk8e3xcbiAgb25EaXNtaXNzOiAoKSA9PiB2b2lkLFxuICBvbk1pbmltaXplOiAoKSA9PiB2b2lkLFxuICBsZXZlbD86ID9Mb2dMZXZlbCxcbnx9PjtcblxuZnVuY3Rpb24gTG9nQm94SW5zcGVjdG9yRm9vdGVyKHByb3BzOiBQcm9wcyk6IFJlYWN0Lk5vZGUge1xuICBpZiAocHJvcHMubGV2ZWwgPT09ICdzeW50YXgnKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMucm9vdH0+XG4gICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuYnV0dG9ufT5cbiAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnN5bnRheEVycm9yVGV4dH0+XG4gICAgICAgICAgICBUaGlzIGVycm9yIGNhbm5vdCBiZSBkaXNtaXNzZWQuXG4gICAgICAgICAgPC9UZXh0PlxuICAgICAgICA8L1ZpZXc+XG4gICAgICA8L1ZpZXc+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5yb290fT5cbiAgICAgIDxGb290ZXJCdXR0b24gdGV4dD1cIkRpc21pc3NcIiBvblByZXNzPXtwcm9wcy5vbkRpc21pc3N9IC8+XG4gICAgICA8Rm9vdGVyQnV0dG9uIHRleHQ9XCJNaW5pbWl6ZVwiIG9uUHJlc3M9e3Byb3BzLm9uTWluaW1pemV9IC8+XG4gICAgPC9WaWV3PlxuICApO1xufVxuXG50eXBlIEJ1dHRvblByb3BzID0gJFJlYWRPbmx5PHt8XG4gIG9uUHJlc3M6ICgpID0+IHZvaWQsXG4gIHRleHQ6IHN0cmluZyxcbnx9PjtcblxuZnVuY3Rpb24gRm9vdGVyQnV0dG9uKHByb3BzOiBCdXR0b25Qcm9wcyk6IFJlYWN0Lk5vZGUge1xuICByZXR1cm4gKFxuICAgIDxMb2dCb3hCdXR0b25cbiAgICAgIGJhY2tncm91bmRDb2xvcj17e1xuICAgICAgICBkZWZhdWx0OiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBwcmVzc2VkOiBMb2dCb3hTdHlsZS5nZXRCYWNrZ3JvdW5kRGFya0NvbG9yKCksXG4gICAgICB9fVxuICAgICAgb25QcmVzcz17cHJvcHMub25QcmVzc31cbiAgICAgIHN0eWxlPXtidXR0b25TdHlsZXMuc2FmZUFyZWF9PlxuICAgICAgPFZpZXcgc3R5bGU9e2J1dHRvblN0eWxlcy5jb250ZW50fT5cbiAgICAgICAgPFRleHQgc3R5bGU9e2J1dHRvblN0eWxlcy5sYWJlbH0+e3Byb3BzLnRleHR9PC9UZXh0PlxuICAgICAgPC9WaWV3PlxuICAgIDwvTG9nQm94QnV0dG9uPlxuICApO1xufVxuXG5jb25zdCBidXR0b25TdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIHNhZmVBcmVhOiB7XG4gICAgZmxleDogMSxcbiAgICAvLyAkRmxvd0ZpeE1lW3NrZXRjaHktbnVsbC1ib29sXVxuICAgIHBhZGRpbmdCb3R0b206IERldmljZUluZm8uZ2V0Q29uc3RhbnRzKCkuaXNJUGhvbmVYX2RlcHJlY2F0ZWQgPyAzMCA6IDAsXG4gIH0sXG4gIGNvbnRlbnQ6IHtcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBoZWlnaHQ6IDQ4LFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgfSxcbiAgbGFiZWw6IHtcbiAgICBjb2xvcjogTG9nQm94U3R5bGUuZ2V0VGV4dENvbG9yKDEpLFxuICAgIGZvbnRTaXplOiAxNCxcbiAgICBpbmNsdWRlRm9udFBhZGRpbmc6IGZhbHNlLFxuICAgIGxpbmVIZWlnaHQ6IDIwLFxuICB9LFxufSk7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgcm9vdDoge1xuICAgIGJhY2tncm91bmRDb2xvcjogTG9nQm94U3R5bGUuZ2V0QmFja2dyb3VuZENvbG9yKDEpLFxuICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsXG4gICAgc2hhZG93T2Zmc2V0OiB7d2lkdGg6IDAsIGhlaWdodDogLTJ9LFxuICAgIHNoYWRvd1JhZGl1czogMixcbiAgICBzaGFkb3dPcGFjaXR5OiAwLjUsXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gIH0sXG4gIGJ1dHRvbjoge1xuICAgIGZsZXg6IDEsXG4gIH0sXG4gIHN5bnRheEVycm9yVGV4dDoge1xuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBoZWlnaHQ6IDQ4LFxuICAgIGZvbnRTaXplOiAxNCxcbiAgICBsaW5lSGVpZ2h0OiAyMCxcbiAgICBwYWRkaW5nVG9wOiAyMCxcbiAgICBwYWRkaW5nQm90dG9tOiA1MCxcbiAgICBmb250U3R5bGU6ICdpdGFsaWMnLFxuICAgIGNvbG9yOiBMb2dCb3hTdHlsZS5nZXRUZXh0Q29sb3IoMC42KSxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBMb2dCb3hJbnNwZWN0b3JGb290ZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBK0I7QUFBQTtBQUFBO0FBUS9CLFNBQVNBLHFCQUFxQixDQUFDQyxLQUFZLEVBQWM7RUFDdkQsSUFBSUEsS0FBSyxDQUFDQyxL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