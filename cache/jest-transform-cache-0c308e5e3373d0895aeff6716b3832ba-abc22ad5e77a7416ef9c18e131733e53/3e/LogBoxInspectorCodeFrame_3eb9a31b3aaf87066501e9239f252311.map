{"version":3,"names":["LogBoxInspectorCodeFrame","props","codeFrame","getFileName","matches","exec","fileName","length","getLocation","location","row","column","styles","box","frame","content","default","pressed","LogBoxStyle","getBackgroundDarkColor","button","openFileInEditor","fileText","AppInfo","appInfo","LogBoxData","getAppInfo","onPress","getBackgroundColor","appInfoStyles","buildButton","text","appVersion","engine","StyleSheet","create","color","getTextColor","fontSize","lineHeight","flex","flexGrow","paddingVertical","paddingHorizontal","borderRadius","marginRight","backgroundColor","marginLeft","marginTop","padding","borderBottomColor","borderBottomWidth","paddingTop","paddingBottom","includeFontPadding","fontFamily","Platform","select","android","ios","textAlign"],"sources":["LogBoxInspectorCodeFrame.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {CodeFrame} from '../Data/parseLogBoxLog';\n\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport AnsiHighlight from './AnsiHighlight';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\ntype Props = $ReadOnly<{|\n  codeFrame: ?CodeFrame,\n|}>;\n\nfunction LogBoxInspectorCodeFrame(props: Props): React.Node {\n  const codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    // $FlowFixMe[incompatible-use]\n    const matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    // $FlowFixMe[incompatible-use]\n    return codeFrame.fileName;\n  }\n\n  function getLocation() {\n    // $FlowFixMe[incompatible-use]\n    const location = codeFrame.location;\n    if (location != null) {\n      return ` (${location.row}:${\n        location.column + 1 /* Code frame columns are zero indexed */\n      })`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\" action={<AppInfo />}>\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <AnsiHighlight style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}>\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction AppInfo() {\n  const appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: appInfo.onPress\n          ? LogBoxStyle.getBackgroundColor(1)\n          : 'transparent',\n      }}\n      style={appInfoStyles.buildButton}\n      onPress={appInfo.onPress}>\n      <Text style={appInfoStyles.text}>\n        {appInfo.appVersion} ({appInfo.engine})\n      </Text>\n    </LogBoxButton>\n  );\n}\n\nconst appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12,\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n});\n\nexport default LogBoxInspectorCodeFrame;\n"],"mappings":"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"}