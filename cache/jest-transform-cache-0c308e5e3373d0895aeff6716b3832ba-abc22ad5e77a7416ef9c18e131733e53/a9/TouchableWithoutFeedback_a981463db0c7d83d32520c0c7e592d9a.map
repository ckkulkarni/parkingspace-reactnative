{"version":3,"names":["PASSTHROUGH_PROPS","TouchableWithoutFeedback","state","pressability","Pressability","createPressabilityConfig","props","element","React","Children","only","children","ariaLive","__DEV__","type","View","push","hitSlop","_accessibilityState","busy","accessibilityState","checked","disabled","expanded","selected","getEventHandlers","onBlur","onFocus","eventHandlersWithoutBlurAndFocus","elementProps","accessible","focusable","onPress","undefined","accessibilityElementsHidden","importantForAccessibility","accessibilityLiveRegion","nativeID","id","prop","cloneElement","configure","reset","Component","ariaDisabled","accessibilityStateDisabled","cancelable","rejectResponderTermination","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","android_disableSound","touchSoundDisabled","onLongPress","onPressIn","onPressOut","displayName","module","exports"],"sources":["TouchableWithoutFeedback.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityRole,\n  AccessibilityState,\n  AccessibilityValue,\n} from '../../Components/View/ViewAccessibility';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {\n  BlurEvent,\n  FocusEvent,\n  LayoutEvent,\n  PressEvent,\n} from '../../Types/CoreEventTypes';\n\nimport View from '../../Components/View/View';\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  accessibilityElementsHidden?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityLanguage?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityLiveRegion?: ?('none' | 'polite' | 'assertive'),\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityValue?: ?AccessibilityValue,\n  'aria-valuemax'?: AccessibilityValue['max'],\n  'aria-valuemin'?: AccessibilityValue['min'],\n  'aria-valuenow'?: AccessibilityValue['now'],\n  'aria-valuetext'?: AccessibilityValue['text'],\n  accessibilityViewIsModal?: ?boolean,\n  'aria-modal'?: ?boolean,\n  accessible?: ?boolean,\n  /**\n   * alias for accessibilityState\n   *\n   * see https://reactnative.dev/docs/accessibility#accessibilitystate\n   */\n  'aria-busy'?: ?boolean,\n  'aria-checked'?: ?boolean | 'mixed',\n  'aria-disabled'?: ?boolean,\n  'aria-expanded'?: ?boolean,\n  'aria-selected'?: ?boolean,\n  'aria-hidden'?: ?boolean,\n  'aria-live'?: ?('polite' | 'assertive' | 'off'),\n  'aria-label'?: ?Stringish,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  focusable?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  id?: string,\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  nativeID?: ?string,\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n  onBlur?: ?(event: BlurEvent) => mixed,\n  onFocus?: ?(event: FocusEvent) => mixed,\n  onLayout?: ?(event: LayoutEvent) => mixed,\n  onLongPress?: ?(event: PressEvent) => mixed,\n  onPress?: ?(event: PressEvent) => mixed,\n  onPressIn?: ?(event: PressEvent) => mixed,\n  onPressOut?: ?(event: PressEvent) => mixed,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n  touchSoundDisabled?: ?boolean,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n|}>;\n\nconst PASSTHROUGH_PROPS = [\n  'accessibilityActions',\n  'accessibilityElementsHidden',\n  'accessibilityHint',\n  'accessibilityLanguage',\n  'accessibilityIgnoresInvertColors',\n  'accessibilityLabel',\n  'accessibilityLiveRegion',\n  'accessibilityRole',\n  'accessibilityValue',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n  'accessibilityViewIsModal',\n  'aria-modal',\n  'hitSlop',\n  'importantForAccessibility',\n  'nativeID',\n  'onAccessibilityAction',\n  'onBlur',\n  'onFocus',\n  'onLayout',\n  'testID',\n];\n\nclass TouchableWithoutFeedback extends React.Component<Props, State> {\n  state: State = {\n    pressability: new Pressability(createPressabilityConfig(this.props)),\n  };\n\n  render(): React.Node {\n    const element = React.Children.only(this.props.children);\n    const children = [element.props.children];\n    const ariaLive = this.props['aria-live'];\n\n    if (__DEV__) {\n      if (element.type === View) {\n        children.push(\n          <PressabilityDebugView color=\"red\" hitSlop={this.props.hitSlop} />,\n        );\n      }\n    }\n\n    let _accessibilityState = {\n      busy: this.props['aria-busy'] ?? this.props.accessibilityState?.busy,\n      checked:\n        this.props['aria-checked'] ?? this.props.accessibilityState?.checked,\n      disabled:\n        this.props['aria-disabled'] ?? this.props.accessibilityState?.disabled,\n      expanded:\n        this.props['aria-expanded'] ?? this.props.accessibilityState?.expanded,\n      selected:\n        this.props['aria-selected'] ?? this.props.accessibilityState?.selected,\n    };\n\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} =\n      this.state.pressability.getEventHandlers();\n\n    const elementProps: {[string]: mixed, ...} = {\n      ...eventHandlersWithoutBlurAndFocus,\n      accessible: this.props.accessible !== false,\n      accessibilityState:\n        this.props.disabled != null\n          ? {\n              ..._accessibilityState,\n              disabled: this.props.disabled,\n            }\n          : _accessibilityState,\n      focusable:\n        this.props.focusable !== false && this.props.onPress !== undefined,\n\n      accessibilityElementsHidden:\n        this.props['aria-hidden'] ?? this.props.accessibilityElementsHidden,\n      importantForAccessibility:\n        this.props['aria-hidden'] === true\n          ? 'no-hide-descendants'\n          : this.props.importantForAccessibility,\n      accessibilityLiveRegion:\n        ariaLive === 'off'\n          ? 'none'\n          : ariaLive ?? this.props.accessibilityLiveRegion,\n      nativeID: this.props.id ?? this.props.nativeID,\n    };\n    for (const prop of PASSTHROUGH_PROPS) {\n      if (this.props[prop] !== undefined) {\n        elementProps[prop] = this.props[prop];\n      }\n    }\n\n    return React.cloneElement(element, elementProps, ...children);\n  }\n\n  componentDidUpdate(): void {\n    this.state.pressability.configure(createPressabilityConfig(this.props));\n  }\n\n  componentWillUnmount(): void {\n    this.state.pressability.reset();\n  }\n}\n\nfunction createPressabilityConfig({\n  'aria-disabled': ariaDisabled,\n  ...props\n}: Props): PressabilityConfig {\n  const accessibilityStateDisabled =\n    ariaDisabled ?? props.accessibilityState?.disabled;\n  return {\n    cancelable: !props.rejectResponderTermination,\n    disabled:\n      props.disabled !== null ? props.disabled : accessibilityStateDisabled,\n    hitSlop: props.hitSlop,\n    delayLongPress: props.delayLongPress,\n    delayPressIn: props.delayPressIn,\n    delayPressOut: props.delayPressOut,\n    minPressDuration: 0,\n    pressRectOffset: props.pressRetentionOffset,\n    android_disableSound: props.touchSoundDisabled,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onLongPress: props.onLongPress,\n    onPress: props.onPress,\n    onPressIn: props.onPressIn,\n    onPressOut: props.onPressOut,\n  };\n}\n\nTouchableWithoutFeedback.displayName = 'TouchableWithoutFeedback';\n\nmodule.exports = TouchableWithoutFeedback;\n"],"mappings":";;;;;;;AAyBA;AACA;AAGA;AACA;AAA+B;AAAA;EAAA;AAAA;AAAA;AAAA;AAAA;AA6D/B,IAAMA,iBAAiB,GAAG,CACxB,sBAAsB,EACtB,6BAA6B,EAC7B,mBAAmB,EACnB,uBAAuB,EACvB,kCAAkC,EAClC,oBAAoB,EACpB,yBAAyB,EACzB,mBAAmB,EACnB,oBAAoB,EACpB,eAAe,EACf,eAAe,EACf,eAAe,EACf,gBAAgB,EAChB,0BAA0B,EAC1B,YAAY,EACZ,SAAS,EACT,2BAA2B,EAC3B,UAAU,EACV,uBAAuB,EACvB,QAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,CACT;AAAC,IAEIC,wBAAwB;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAC5BC,KAAK,GAAU;MACbC,YAAY,EAAE,IAAIC,qBAAY,CAACC,wBAAwB,CAAC,MAAKC,KAAK,CAAC;IACrE,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAED,kBAAqB;MAAA;MACnB,IAAMC,OAAO,GAAGC,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAAC;MACxD,IAAMA,QAAQ,GAAG,CAACJ,OAAO,CAACD,KAAK,CAACK,QAAQ,CAAC;MACzC,IAAMC,QAAQ,GAAG,IAAI,CAACN,KAAK,CAAC,WAAW,CAAC;MAExC,IAAIO,OAAO,EAAE;QACX,IAAIN,OAAO,CAACO,IAAI,KAAKC,aAAI,EAAE;UACzBJ,QAAQ,CAACK,IAAI,CACX,qBAAC,wCAAqB;YAAC,KAAK,EAAC,KAAK;YAAC,OAAO,EAAE,IAAI,CAACV,KAAK,CAACW;UAAQ,EAAG,CACnE;QACH;MACF;MAEA,IAAIC,mBAAmB,GAAG;QACxBC,IAAI,0BAAE,IAAI,CAACb,KAAK,CAAC,WAAW,CAAC,4DAAI,IAAI,CAACA,KAAK,CAACc,kBAAkB,qBAA7B,sBAA+BD,IAAI;QACpEE,OAAO,0BACL,IAAI,CAACf,KAAK,CAAC,cAAc,CAAC,6DAAI,IAAI,CAACA,KAAK,CAACc,kBAAkB,qBAA7B,uBAA+BC,OAAO;QACtEC,QAAQ,0BACN,IAAI,CAAChB,KAAK,CAAC,eAAe,CAAC,6DAAI,IAAI,CAACA,KAAK,CAACc,kBAAkB,qBAA7B,uBAA+BE,QAAQ;QACxEC,QAAQ,0BACN,IAAI,CAACjB,KAAK,CAAC,eAAe,CAAC,6DAAI,IAAI,CAACA,KAAK,CAACc,kBAAkB,qBAA7B,uBAA+BG,QAAQ;QACxEC,QAAQ,0BACN,IAAI,CAAClB,KAAK,CAAC,eAAe,CAAC,6DAAI,IAAI,CAACA,KAAK,CAACc,kBAAkB,qBAA7B,uBAA+BI;MAClE,CAAC;MAID,4BACE,IAAI,CAACtB,KAAK,CAACC,YAAY,CAACsB,gBAAgB,EAAE;QADrCC,MAAM,yBAANA,MAAM;QAAEC,OAAO,yBAAPA,OAAO;QAAKC,gCAAgC;MAG3D,IAAMC,YAAoC,qBACrCD,gCAAgC;QACnCE,UAAU,EAAE,IAAI,CAACxB,KAAK,CAACwB,UAAU,KAAK,KAAK;QAC3CV,kBAAkB,EAChB,IAAI,CAACd,KAAK,CAACgB,QAAQ,IAAI,IAAI,qBAElBJ,mBAAmB;UACtBI,QAAQ,EAAE,IAAI,CAAChB,KAAK,CAACgB;QAAQ,KAE/BJ,mBAAmB;QACzBa,SAAS,EACP,IAAI,CAACzB,KAAK,CAACyB,SAAS,KAAK,KAAK,IAAI,IAAI,CAACzB,KAAK,CAAC0B,OAAO,KAAKC,SAAS;QAEpEC,2BAA2B,0BACzB,IAAI,CAAC5B,KAAK,CAAC,aAAa,CAAC,mCAAI,IAAI,CAACA,KAAK,CAAC4B,2BAA2B;QACrEC,yBAAyB,EACvB,IAAI,CAAC7B,KAAK,CAAC,aAAa,CAAC,KAAK,IAAI,GAC9B,qBAAqB,GACrB,IAAI,CAACA,KAAK,CAAC6B,yBAAyB;QAC1CC,uBAAuB,EACrBxB,QAAQ,KAAK,KAAK,GACd,MAAM,GACNA,QAAQ,WAARA,QAAQ,GAAI,IAAI,CAACN,KAAK,CAAC8B,uBAAuB;QACpDC,QAAQ,oBAAE,IAAI,CAAC/B,KAAK,CAACgC,EAAE,6BAAI,IAAI,CAAChC,KAAK,CAAC+B;MAAQ,EAC/C;MACD,KAAK,IAAME,IAAI,IAAIvC,iBAAiB,EAAE;QACpC,IAAI,IAAI,CAACM,KAAK,CAACiC,IAAI,CAAC,KAAKN,SAAS,EAAE;UAClCJ,YAAY,CAACU,IAAI,CAAC,GAAG,IAAI,CAACjC,KAAK,CAACiC,IAAI,CAAC;QACvC;MACF;MAEA,OAAO/B,KAAK,CAACgC,YAAY,OAAlBhC,KAAK,GAAcD,OAAO,EAAEsB,YAAY,SAAKlB,QAAQ,EAAC;IAC/D;EAAC;IAAA;IAAA,OAED,8BAA2B;MACzB,IAAI,CAACT,KAAK,CAACC,YAAY,CAACsC,SAAS,CAACpC,wBAAwB,CAAC,IAAI,CAACC,KAAK,CAAC,CAAC;IACzE;EAAC;IAAA;IAAA,OAED,gCAA6B;MAC3B,IAAI,CAACJ,KAAK,CAACC,YAAY,CAACuC,KAAK,EAAE;IACjC;EAAC;EAAA;AAAA,EA3EoClC,KAAK,CAACmC,SAAS;AA8EtD,SAAStC,wBAAwB,OAGH;EAAA;EAAA,IAFXuC,YAAY,QAA7B,eAAe;IACZtC,KAAK;EAER,IAAMuC,0BAA0B,GAC9BD,YAAY,WAAZA,YAAY,4BAAItC,KAAK,CAACc,kBAAkB,qBAAxB,sBAA0BE,QAAQ;EACpD,OAAO;IACLwB,UAAU,EAAE,CAACxC,KAAK,CAACyC,0BAA0B;IAC7CzB,QAAQ,EACNhB,KAAK,CAACgB,QAAQ,KAAK,IAAI,GAAGhB,KAAK,CAACgB,QAAQ,GAAGuB,0BAA0B;IACvE5B,OAAO,EAAEX,KAAK,CAACW,OAAO;IACtB+B,cAAc,EAAE1C,KAAK,CAAC0C,cAAc;IACpCC,YAAY,EAAE3C,KAAK,CAAC2C,YAAY;IAChCC,aAAa,EAAE5C,KAAK,CAAC4C,aAAa;IAClCC,gBAAgB,EAAE,CAAC;IACnBC,eAAe,EAAE9C,KAAK,CAAC+C,oBAAoB;IAC3CC,oBAAoB,EAAEhD,KAAK,CAACiD,kBAAkB;IAC9C7B,MAAM,EAAEpB,KAAK,CAACoB,MAAM;IACpBC,OAAO,EAAErB,KAAK,CAACqB,OAAO;IACtB6B,WAAW,EAAElD,KAAK,CAACkD,WAAW;IAC9BxB,OAAO,EAAE1B,KAAK,CAAC0B,OAAO;IACtByB,SAAS,EAAEnD,KAAK,CAACmD,SAAS;IAC1BC,UAAU,EAAEpD,KAAK,CAACoD;EACpB,CAAC;AACH;AAEAzD,wBAAwB,CAAC0D,WAAW,GAAG,0BAA0B;AAEjEC,MAAM,CAACC,OAAO,GAAG5D,wBAAwB"}