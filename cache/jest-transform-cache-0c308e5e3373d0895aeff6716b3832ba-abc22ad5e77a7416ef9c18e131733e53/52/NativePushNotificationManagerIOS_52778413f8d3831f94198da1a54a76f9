4597f9b965042ef83148469e44ee952f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = TurboModuleRegistry.get('PushNotificationManager');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiZ2V0Il0sInNvdXJjZXMiOlsiTmF0aXZlUHVzaE5vdGlmaWNhdGlvbk1hbmFnZXJJT1MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93XG4gKi9cblxuaW1wb3J0IHR5cGUge1R1cmJvTW9kdWxlfSBmcm9tICcuLi9UdXJib01vZHVsZS9SQ1RFeHBvcnQnO1xuXG5pbXBvcnQgKiBhcyBUdXJib01vZHVsZVJlZ2lzdHJ5IGZyb20gJy4uL1R1cmJvTW9kdWxlL1R1cmJvTW9kdWxlUmVnaXN0cnknO1xuXG50eXBlIFBlcm1pc3Npb25zID0ge3xcbiAgYWxlcnQ6IGJvb2xlYW4sXG4gIGJhZGdlOiBib29sZWFuLFxuICBzb3VuZDogYm9vbGVhbixcbnx9O1xuXG50eXBlIE5vdGlmaWNhdGlvbiA9IHt8XG4gICthbGVydFRpdGxlPzogP3N0cmluZyxcbiAgLy8gQWN0dWFsIHR5cGU6IHN0cmluZyB8IG51bWJlclxuICArZmlyZURhdGU/OiA/bnVtYmVyLFxuICArYWxlcnRCb2R5PzogP3N0cmluZyxcbiAgK2FsZXJ0QWN0aW9uPzogP3N0cmluZyxcbiAgK3VzZXJJbmZvPzogP09iamVjdCxcbiAgK2NhdGVnb3J5PzogP3N0cmluZyxcbiAgLy8gQWN0dWFsIHR5cGU6ICd5ZWFyJyB8ICdtb250aCcgfCAnd2VlaycgfCAnZGF5JyB8ICdob3VyJyB8ICdtaW51dGUnXG4gICtyZXBlYXRJbnRlcnZhbD86ID9zdHJpbmcsXG4gICthcHBsaWNhdGlvbkljb25CYWRnZU51bWJlcj86ID9udW1iZXIsXG4gICtpc1NpbGVudD86ID9ib29sZWFuLFxuICArc291bmROYW1lPzogP3N0cmluZyxcbnx9O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICtnZXRDb25zdGFudHM6ICgpID0+IHt8fH07XG4gICtvbkZpbmlzaFJlbW90ZU5vdGlmaWNhdGlvbjogKFxuICAgIG5vdGlmaWNhdGlvbklkOiBzdHJpbmcsXG4gICAgLyoqXG4gICAgICogVHlwZTpcbiAgICAgKiAgJ1VJQmFja2dyb3VuZEZldGNoUmVzdWx0TmV3RGF0YScgfFxuICAgICAqICAnVUlCYWNrZ3JvdW5kRmV0Y2hSZXN1bHROb0RhdGEnIHxcbiAgICAgKiAgJ1VJQmFja2dyb3VuZEZldGNoUmVzdWx0RmFpbGVkJ1xuICAgICAqL1xuICAgIGZldGNoUmVzdWx0OiBzdHJpbmcsXG4gICkgPT4gdm9pZDtcbiAgK3NldEFwcGxpY2F0aW9uSWNvbkJhZGdlTnVtYmVyOiAobnVtOiBudW1iZXIpID0+IHZvaWQ7XG4gICtnZXRBcHBsaWNhdGlvbkljb25CYWRnZU51bWJlcjogKGNhbGxiYWNrOiAobnVtOiBudW1iZXIpID0+IHZvaWQpID0+IHZvaWQ7XG4gICtyZXF1ZXN0UGVybWlzc2lvbnM6IChwZXJtaXNzaW9uOiB7fFxuICAgICthbGVydDogYm9vbGVhbixcbiAgICArYmFkZ2U6IGJvb2xlYW4sXG4gICAgK3NvdW5kOiBib29sZWFuLFxuICB8fSkgPT4gUHJvbWlzZTxQZXJtaXNzaW9ucz47XG4gICthYmFuZG9uUGVybWlzc2lvbnM6ICgpID0+IHZvaWQ7XG4gICtjaGVja1Blcm1pc3Npb25zOiAoY2FsbGJhY2s6IChwZXJtaXNzaW9uczogUGVybWlzc2lvbnMpID0+IHZvaWQpID0+IHZvaWQ7XG4gICtwcmVzZW50TG9jYWxOb3RpZmljYXRpb246IChub3RpZmljYXRpb246IE5vdGlmaWNhdGlvbikgPT4gdm9pZDtcbiAgK3NjaGVkdWxlTG9jYWxOb3RpZmljYXRpb246IChub3RpZmljYXRpb246IE5vdGlmaWNhdGlvbikgPT4gdm9pZDtcbiAgK2NhbmNlbEFsbExvY2FsTm90aWZpY2F0aW9uczogKCkgPT4gdm9pZDtcbiAgK2NhbmNlbExvY2FsTm90aWZpY2F0aW9uczogKHVzZXJJbmZvOiBPYmplY3QpID0+IHZvaWQ7XG4gICtnZXRJbml0aWFsTm90aWZpY2F0aW9uOiAoKSA9PiBQcm9taXNlPD9Ob3RpZmljYXRpb24+O1xuICArZ2V0U2NoZWR1bGVkTG9jYWxOb3RpZmljYXRpb25zOiAoXG4gICAgY2FsbGJhY2s6IChub3RpZmljYXRpb246IE5vdGlmaWNhdGlvbikgPT4gdm9pZCxcbiAgKSA9PiB2b2lkO1xuICArcmVtb3ZlQWxsRGVsaXZlcmVkTm90aWZpY2F0aW9uczogKCkgPT4gdm9pZDtcbiAgK3JlbW92ZURlbGl2ZXJlZE5vdGlmaWNhdGlvbnM6IChpZGVudGlmaWVyczogQXJyYXk8c3RyaW5nPikgPT4gdm9pZDtcbiAgK2dldERlbGl2ZXJlZE5vdGlmaWNhdGlvbnM6IChcbiAgICBjYWxsYmFjazogKG5vdGlmaWNhdGlvbjogQXJyYXk8Tm90aWZpY2F0aW9uPikgPT4gdm9pZCxcbiAgKSA9PiB2b2lkO1xuICArZ2V0QXV0aG9yaXphdGlvblN0YXR1czogKFxuICAgIGNhbGxiYWNrOiAoYXV0aG9yaXphdGlvblN0YXR1czogbnVtYmVyKSA9PiB2b2lkLFxuICApID0+IHZvaWQ7XG4gICthZGRMaXN0ZW5lcjogKGV2ZW50VHlwZTogc3RyaW5nKSA9PiB2b2lkO1xuICArcmVtb3ZlTGlzdGVuZXJzOiAoY291bnQ6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgKFR1cmJvTW9kdWxlUmVnaXN0cnkuZ2V0PFNwZWM+KFxuICAnUHVzaE5vdGlmaWNhdGlvbk1hbmFnZXInLFxuKTogP1NwZWMpO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBWUE7QUFBMEU7QUFBQTtBQUFBLGVBZ0UxREEsbUJBQW1CLENBQUNDLEdBQUcsQ0FDckMseUJBQXlCLENBQzFCO0FBQUEifQ==