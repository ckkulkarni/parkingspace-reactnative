b58a7d8c76eb795abc061a946125ec13
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PaymentScreen;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _native = require("@react-navigation/native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function PaymentScreen(_ref) {
  var route = _ref.route;
  var navigation = (0, _native.useNavigation)();
  var _route$params = route.params,
    spaces = _route$params.spaces,
    space = _route$params.space,
    details = _route$params.details,
    markSpaceAsUnoccupied = _route$params.markSpaceAsUnoccupied;
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    parkingCharge = _useState2[0],
    setCharges = _useState2[1];
  var _useState3 = (0, _react.useState)(''),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    timeSpent = _useState4[0],
    setTimeSpent = _useState4[1];
  (0, _react.useEffect)(function () {
    calculateCharges();
  }, [details]);
  function calculateCharges() {
    var timeDiff = new Date().getTime() - Date.parse(details.time);
    console.log(timeDiff);
    var hours = Math.abs(Math.ceil(timeDiff / (1000 * 3600)));
    console.log(hours);
    var minutes = Math.abs(Math.abs(Math.ceil(timeDiff % (1000 * 3600) / (1000 * 60))));
    console.log(minutes);
    var twoHourCharge = 10;
    var extra = 0;
    if (hours > 2) {
      extra = (hours - 1) * 10;
    }
    setCharges(twoHourCharge + extra);
    updateTimeSpent(hours, minutes);
  }
  function updateTimeSpent(hours, minutes) {
    var timeSpentString = hours + " hours " + minutes + " minutes";
    setTimeSpent(timeSpentString);
  }
  function handlePayment() {
    return _handlePayment.apply(this, arguments);
  }
  function _handlePayment() {
    _handlePayment = (0, _asyncToGenerator2.default)(function* () {
      var registration = details.reg;
      var charge = parkingCharge;
      try {
        var resultSet = yield fetch("https://httpstat.us/200", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            'car-registration': registration,
            charge: charge
          })
        });
        if (resultSet.ok) {
          _reactNative.Alert.alert("Payment Sucessful");
          markSpaceAsUnoccupied(space);
          navigation.goBack();
        } else {
          _reactNative.Alert.alert('Payment Failed');
        }
      } catch (error) {
        console.log(error);
      }
    });
    return _handlePayment.apply(this, arguments);
  }
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: styles.container,
    children: details && (0, _jsxRuntime.jsxs)(_reactNative.View, {
      children: [(0, _jsxRuntime.jsx)(_reactNative.Button, {
        title: "Go Back",
        onPress: function onPress() {
          navigation.goBack();
        },
        testID: "deregester-back"
      }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
        children: ["Car Registration: ", details.reg]
      }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
        testID: "deregester-time-spent",
        children: ["Time Spent: ", timeSpent]
      }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
        testID: "deregester-charge",
        children: ["Parking Charges: $", parkingCharge]
      }), (0, _jsxRuntime.jsx)(_reactNative.Button, {
        title: "Payment Taken",
        onPress: handlePayment,
        testID: "deregester-payment-button"
      })]
    })
  });
}
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,