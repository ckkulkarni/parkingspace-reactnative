{"version":3,"names":["NativeModule","TurboModuleRegistry","getEnforcing","constants","NativeStatusBarManager","getConstants","getHeight","callback","setNetworkActivityIndicatorVisible","visible","addListener","eventType","removeListeners","count","setStyle","statusBarStyle","animated","setHidden","hidden","withAnimation"],"sources":["NativeStatusBarManagerIOS.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |};\n\n  // TODO(T47754272) Can we remove this method?\n  +getHeight: (callback: (result: {|height: number|}) => void) => void;\n  +setNetworkActivityIndicatorVisible: (visible: boolean) => void;\n  +addListener: (eventType: string) => void;\n  +removeListeners: (count: number) => void;\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   *    - 'light-content'\n   */\n  +setStyle: (statusBarStyle?: ?string, animated: boolean) => void;\n  /**\n   *  - withAnimation can be: 'none' | 'fade' | 'slide'\n   */\n  +setHidden: (hidden: boolean, withAnimation: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\nlet constants = null;\n\nconst NativeStatusBarManager = {\n  getConstants(): {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n\n  // TODO(T47754272) Can we remove this method?\n  getHeight(callback: (result: {|height: number|}) => void): void {\n    NativeModule.getHeight(callback);\n  },\n\n  setNetworkActivityIndicatorVisible(visible: boolean): void {\n    NativeModule.setNetworkActivityIndicatorVisible(visible);\n  },\n\n  addListener(eventType: string): void {\n    NativeModule.addListener(eventType);\n  },\n\n  removeListeners(count: number): void {\n    NativeModule.removeListeners(count);\n  },\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   *    - 'light-content'\n   */\n  setStyle(statusBarStyle?: ?string, animated: boolean): void {\n    NativeModule.setStyle(statusBarStyle, animated);\n  },\n\n  /**\n   *  - withAnimation can be: 'none' | 'fade' | 'slide'\n   */\n  setHidden(hidden: boolean, withAnimation: string): void {\n    NativeModule.setHidden(hidden, withAnimation);\n  },\n};\n\nexport default NativeStatusBarManager;\n"],"mappings":";;;;AAYA;AAA6E;AAAA;AA2B7E,IAAMA,YAAY,GAAGC,mBAAmB,CAACC,YAAY,CAAO,kBAAkB,CAAC;AAC/E,IAAIC,SAAS,GAAG,IAAI;AAEpB,IAAMC,sBAAsB,GAAG;EAC7BC,YAAY,0BAGT;IACD,IAAIF,SAAS,IAAI,IAAI,EAAE;MACrBA,SAAS,GAAGH,YAAY,CAACK,YAAY,EAAE;IACzC;IACA,OAAOF,SAAS;EAClB,CAAC;EAGDG,SAAS,qBAACC,QAA8C,EAAQ;IAC9DP,YAAY,CAACM,SAAS,CAACC,QAAQ,CAAC;EAClC,CAAC;EAEDC,kCAAkC,8CAACC,OAAgB,EAAQ;IACzDT,YAAY,CAACQ,kCAAkC,CAACC,OAAO,CAAC;EAC1D,CAAC;EAEDC,WAAW,uBAACC,SAAiB,EAAQ;IACnCX,YAAY,CAACU,WAAW,CAACC,SAAS,CAAC;EACrC,CAAC;EAEDC,eAAe,2BAACC,KAAa,EAAQ;IACnCb,YAAY,CAACY,eAAe,CAACC,KAAK,CAAC;EACrC,CAAC;EAQDC,QAAQ,oBAACC,cAAwB,EAAEC,QAAiB,EAAQ;IAC1DhB,YAAY,CAACc,QAAQ,CAACC,cAAc,EAAEC,QAAQ,CAAC;EACjD,CAAC;EAKDC,SAAS,qBAACC,MAAe,EAAEC,aAAqB,EAAQ;IACtDnB,YAAY,CAACiB,SAAS,CAACC,MAAM,EAAEC,aAAa,CAAC;EAC/C;AACF,CAAC;AAAC,eAEaf,sBAAsB;AAAA"}