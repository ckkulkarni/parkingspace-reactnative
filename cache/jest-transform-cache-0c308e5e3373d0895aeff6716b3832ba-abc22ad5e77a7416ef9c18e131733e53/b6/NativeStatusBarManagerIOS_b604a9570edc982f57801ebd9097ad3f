b9fbfccf71852cdcdb9d436ec190b5a4
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');
var constants = null;
var NativeStatusBarManager = {
  getConstants: function getConstants() {
    if (constants == null) {
      constants = NativeModule.getConstants();
    }
    return constants;
  },
  getHeight: function getHeight(callback) {
    NativeModule.getHeight(callback);
  },
  setNetworkActivityIndicatorVisible: function setNetworkActivityIndicatorVisible(visible) {
    NativeModule.setNetworkActivityIndicatorVisible(visible);
  },
  addListener: function addListener(eventType) {
    NativeModule.addListener(eventType);
  },
  removeListeners: function removeListeners(count) {
    NativeModule.removeListeners(count);
  },
  setStyle: function setStyle(statusBarStyle, animated) {
    NativeModule.setStyle(statusBarStyle, animated);
  },
  setHidden: function setHidden(hidden, withAnimation) {
    NativeModule.setHidden(hidden, withAnimation);
  }
};
var _default = NativeStatusBarManager;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOYXRpdmVNb2R1bGUiLCJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiZ2V0RW5mb3JjaW5nIiwiY29uc3RhbnRzIiwiTmF0aXZlU3RhdHVzQmFyTWFuYWdlciIsImdldENvbnN0YW50cyIsImdldEhlaWdodCIsImNhbGxiYWNrIiwic2V0TmV0d29ya0FjdGl2aXR5SW5kaWNhdG9yVmlzaWJsZSIsInZpc2libGUiLCJhZGRMaXN0ZW5lciIsImV2ZW50VHlwZSIsInJlbW92ZUxpc3RlbmVycyIsImNvdW50Iiwic2V0U3R5bGUiLCJzdGF0dXNCYXJTdHlsZSIsImFuaW1hdGVkIiwic2V0SGlkZGVuIiwiaGlkZGVuIiwid2l0aEFuaW1hdGlvbiJdLCJzb3VyY2VzIjpbIk5hdGl2ZVN0YXR1c0Jhck1hbmFnZXJJT1MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdFxuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCB0eXBlIHtUdXJib01vZHVsZX0gZnJvbSAnLi4vLi4vVHVyYm9Nb2R1bGUvUkNURXhwb3J0JztcblxuaW1wb3J0ICogYXMgVHVyYm9Nb2R1bGVSZWdpc3RyeSBmcm9tICcuLi8uLi9UdXJib01vZHVsZS9UdXJib01vZHVsZVJlZ2lzdHJ5JztcblxuZXhwb3J0IGludGVyZmFjZSBTcGVjIGV4dGVuZHMgVHVyYm9Nb2R1bGUge1xuICArZ2V0Q29uc3RhbnRzOiAoKSA9PiB7fFxuICAgICtIRUlHSFQ6IG51bWJlcixcbiAgICArREVGQVVMVF9CQUNLR1JPVU5EX0NPTE9SPzogbnVtYmVyLFxuICB8fTtcblxuICAvLyBUT0RPKFQ0Nzc1NDI3MikgQ2FuIHdlIHJlbW92ZSB0aGlzIG1ldGhvZD9cbiAgK2dldEhlaWdodDogKGNhbGxiYWNrOiAocmVzdWx0OiB7fGhlaWdodDogbnVtYmVyfH0pID0+IHZvaWQpID0+IHZvaWQ7XG4gICtzZXROZXR3b3JrQWN0aXZpdHlJbmRpY2F0b3JWaXNpYmxlOiAodmlzaWJsZTogYm9vbGVhbikgPT4gdm9pZDtcbiAgK2FkZExpc3RlbmVyOiAoZXZlbnRUeXBlOiBzdHJpbmcpID0+IHZvaWQ7XG4gICtyZW1vdmVMaXN0ZW5lcnM6IChjb3VudDogbnVtYmVyKSA9PiB2b2lkO1xuXG4gIC8qKlxuICAgKiAgLSBzdGF0dXNCYXJTdHlsZXMgY2FuIGJlOlxuICAgKiAgICAtICdkZWZhdWx0J1xuICAgKiAgICAtICdkYXJrLWNvbnRlbnQnXG4gICAqICAgIC0gJ2xpZ2h0LWNvbnRlbnQnXG4gICAqL1xuICArc2V0U3R5bGU6IChzdGF0dXNCYXJTdHlsZT86ID9zdHJpbmcsIGFuaW1hdGVkOiBib29sZWFuKSA9PiB2b2lkO1xuICAvKipcbiAgICogIC0gd2l0aEFuaW1hdGlvbiBjYW4gYmU6ICdub25lJyB8ICdmYWRlJyB8ICdzbGlkZSdcbiAgICovXG4gICtzZXRIaWRkZW46IChoaWRkZW46IGJvb2xlYW4sIHdpdGhBbmltYXRpb246IHN0cmluZykgPT4gdm9pZDtcbn1cblxuY29uc3QgTmF0aXZlTW9kdWxlID0gVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXRFbmZvcmNpbmc8U3BlYz4oJ1N0YXR1c0Jhck1hbmFnZXInKTtcbmxldCBjb25zdGFudHMgPSBudWxsO1xuXG5jb25zdCBOYXRpdmVTdGF0dXNCYXJNYW5hZ2VyID0ge1xuICBnZXRDb25zdGFudHMoKToge3xcbiAgICArSEVJR0hUOiBudW1iZXIsXG4gICAgK0RFRkFVTFRfQkFDS0dST1VORF9DT0xPUj86IG51bWJlcixcbiAgfH0ge1xuICAgIGlmIChjb25zdGFudHMgPT0gbnVsbCkge1xuICAgICAgY29uc3RhbnRzID0gTmF0aXZlTW9kdWxlLmdldENvbnN0YW50cygpO1xuICAgIH1cbiAgICByZXR1cm4gY29uc3RhbnRzO1xuICB9LFxuXG4gIC8vIFRPRE8oVDQ3NzU0MjcyKSBDYW4gd2UgcmVtb3ZlIHRoaXMgbWV0aG9kP1xuICBnZXRIZWlnaHQoY2FsbGJhY2s6IChyZXN1bHQ6IHt8aGVpZ2h0OiBudW1iZXJ8fSkgPT4gdm9pZCk6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5nZXRIZWlnaHQoY2FsbGJhY2spO1xuICB9LFxuXG4gIHNldE5ldHdvcmtBY3Rpdml0eUluZGljYXRvclZpc2libGUodmlzaWJsZTogYm9vbGVhbik6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5zZXROZXR3b3JrQWN0aXZpdHlJbmRpY2F0b3JWaXNpYmxlKHZpc2libGUpO1xuICB9LFxuXG4gIGFkZExpc3RlbmVyKGV2ZW50VHlwZTogc3RyaW5nKTogdm9pZCB7XG4gICAgTmF0aXZlTW9kdWxlLmFkZExpc3RlbmVyKGV2ZW50VHlwZSk7XG4gIH0sXG5cbiAgcmVtb3ZlTGlzdGVuZXJzKGNvdW50OiBudW1iZXIpOiB2b2lkIHtcbiAgICBOYXRpdmVNb2R1bGUucmVtb3ZlTGlzdGVuZXJzKGNvdW50KTtcbiAgfSxcblxuICAvKipcbiAgICogIC0gc3RhdHVzQmFyU3R5bGVzIGNhbiBiZTpcbiAgICogICAgLSAnZGVmYXVsdCdcbiAgICogICAgLSAnZGFyay1jb250ZW50J1xuICAgKiAgICAtICdsaWdodC1jb250ZW50J1xuICAgKi9cbiAgc2V0U3R5bGUoc3RhdHVzQmFyU3R5bGU/OiA/c3RyaW5nLCBhbmltYXRlZDogYm9vbGVhbik6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5zZXRTdHlsZShzdGF0dXNCYXJTdHlsZSwgYW5pbWF0ZWQpO1xuICB9LFxuXG4gIC8qKlxuICAgKiAgLSB3aXRoQW5pbWF0aW9uIGNhbiBiZTogJ25vbmUnIHwgJ2ZhZGUnIHwgJ3NsaWRlJ1xuICAgKi9cbiAgc2V0SGlkZGVuKGhpZGRlbjogYm9vbGVhbiwgd2l0aEFuaW1hdGlvbjogc3RyaW5nKTogdm9pZCB7XG4gICAgTmF0aXZlTW9kdWxlLnNldEhpZGRlbihoaWRkZW4sIHdpdGhBbmltYXRpb24pO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTmF0aXZlU3RhdHVzQmFyTWFuYWdlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQVlBO0FBQTZFO0FBQUE7QUEyQjdFLElBQU1BLFlBQVksR0FBR0MsbUJBQW1CLENBQUNDLFlBQVksQ0FBTyxrQkFBa0IsQ0FBQztBQUMvRSxJQUFJQyxTQUFTLEdBQUcsSUFBSTtBQUVwQixJQUFNQyxzQkFBc0IsR0FBRztFQUM3QkMsWUFBWSwwQkFHVDtJQUNELElBQUlGLFNBQVMsSUFBSSxJQUFJLEVBQUU7TUFDckJBLFNBQVMsR0FBR0gsWUFBWSxDQUFDSyxZQUFZLEVBQUU7SUFDekM7SUFDQSxPQUFPRixTQUFTO0VBQ2xCLENBQUM7RUFHREcsU0FBUyxxQkFBQ0MsUUFBOEMsRUFBUTtJQUM5RFAsWUFBWSxDQUFDTSxTQUFTLENBQUNDLFFBQVEsQ0FBQztFQUNsQyxDQUFDO0VBRURDLGtDQUFrQyw4Q0FBQ0MsT0FBZ0IsRUFBUTtJQUN6RFQsWUFBWSxDQUFDUSxrQ0FBa0MsQ0FBQ0MsT0FBTyxDQUFDO0VBQzFELENBQUM7RUFFREMsV0FBVyx1QkFBQ0MsU0FBaUIsRUFBUTtJQUNuQ1gsWUFBWSxDQUFDVSxXQUFXLENBQUNDLFNBQVMsQ0FBQztFQUNyQyxDQUFDO0VBRURDLGVBQWUsMkJBQUNDLEtBQWEsRUFBUTtJQUNuQ2IsWUFBWSxDQUFDWSxlQUFlLENBQUNDLEtBQUssQ0FBQztFQUNyQyxDQUFDO0VBUURDLFFBQVEsb0JBQUNDLGNBQXdCLEVBQUVDLFFBQWlCLEVBQVE7SUFDMURoQixZQUFZLENBQUNjLFFBQVEsQ0FBQ0MsY0FBYyxFQUFFQyxRQUFRLENBQUM7RUFDakQsQ0FBQztFQUtEQyxTQUFTLHFCQUFDQyxNQUFlLEVBQUVDLGFBQXFCLEVBQVE7SUFDdERuQixZQUFZLENBQUNpQixTQUFTLENBQUNDLE1BQU0sRUFBRUMsYUFBYSxDQUFDO0VBQy9DO0FBQ0YsQ0FBQztBQUFDLGVBRWFmLHNCQUFzQjtBQUFBIn0=