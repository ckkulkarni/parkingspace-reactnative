{"version":3,"names":["getDevServer","require","symbolicateStackTrace","stack","devServer","bundleLoadedFromServer","Error","fetch","global","response","url","method","body","JSON","stringify","json","module","exports"],"sources":["symbolicateStackTrace.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {StackFrame} from '../NativeExceptionsManager';\n\nconst getDevServer = require('./getDevServer');\n\nexport type CodeFrame = $ReadOnly<{\n  content: string,\n  location: ?{\n    row: number,\n    column: number,\n    ...\n  },\n  fileName: string,\n}>;\n\nexport type SymbolicatedStackTrace = $ReadOnly<{\n  stack: Array<StackFrame>,\n  codeFrame: ?CodeFrame,\n}>;\n\nasync function symbolicateStackTrace(\n  stack: Array<StackFrame>,\n): Promise<SymbolicatedStackTrace> {\n  const devServer = getDevServer();\n  if (!devServer.bundleLoadedFromServer) {\n    throw new Error('Bundle was not loaded from Metro.');\n  }\n\n  // Lazy-load `fetch` until the first symbolication call to avoid circular requires.\n  const fetch = global.fetch ?? require('../../Network/fetch');\n  const response = await fetch(devServer.url + 'symbolicate', {\n    method: 'POST',\n    body: JSON.stringify({stack}),\n  });\n  return await response.json();\n}\n\nmodule.exports = symbolicateStackTrace;\n"],"mappings":"AAUA,YAAY;;AAAC;AAAA;AAIb,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAAC,SAiBhCC,qBAAqB;EAAA;AAAA;AAAA;EAAA,yDAApC,WACEC,KAAwB,EACS;IAAA;IACjC,IAAMC,SAAS,GAAGJ,YAAY,EAAE;IAChC,IAAI,CAACI,SAAS,CAACC,sBAAsB,EAAE;MACrC,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;IACtD;IAGA,IAAMC,KAAK,oBAAGC,MAAM,CAACD,KAAK,4BAAIN,OAAO,CAAC,qBAAqB,CAAC;IAC5D,IAAMQ,QAAQ,SAASF,KAAK,CAACH,SAAS,CAACM,GAAG,GAAG,aAAa,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACX,KAAK,EAALA;MAAK,CAAC;IAC9B,CAAC,CAAC;IACF,aAAaM,QAAQ,CAACM,IAAI,EAAE;EAC9B,CAAC;EAAA;AAAA;AAEDC,MAAM,CAACC,OAAO,GAAGf,qBAAqB"}