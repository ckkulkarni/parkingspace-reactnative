{"version":3,"names":["_LogBoxInspectorContainer","_handleDismiss","props","selectedLogIndex","logs","logsArray","Array","from","length","LogBoxData","setSelectedLog","dismiss","_handleMinimize","_handleSetSelectedLog","index","StyleSheet","absoluteFill","React","Component","withSubscription"],"sources":["LogBoxInspectorContainer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type LogBoxLog from './Data/LogBoxLog';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport class _LogBoxInspectorContainer extends React.Component<Props> {\n  render(): React.Node {\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <LogBoxInspector\n          onDismiss={this._handleDismiss}\n          onMinimize={this._handleMinimize}\n          onChangeSelectedIndex={this._handleSetSelectedLog}\n          logs={this.props.logs}\n          selectedIndex={this.props.selectedLogIndex}\n        />\n      </View>\n    );\n  }\n\n  _handleDismiss = (): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const {selectedLogIndex, logs} = this.props;\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  };\n\n  _handleMinimize = (): void => {\n    LogBoxData.setSelectedLog(-1);\n  };\n\n  _handleSetSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n}\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxInspectorContainer,\n): React.AbstractComponent<{||}>);\n"],"mappings":";;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AAA+B;AAAA;AAAA;AAAA;AAAA;AAAA,IAQlBA,yBAAyB;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAepCC,cAAc,GAAG,YAAY;MAI3B,kBAAiC,MAAKC,KAAK;QAApCC,gBAAgB,eAAhBA,gBAAgB;QAAEC,IAAI,eAAJA,IAAI;MAC7B,IAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;MAClC,IAAID,gBAAgB,IAAI,IAAI,EAAE;QAC5B,IAAIE,SAAS,CAACG,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;UAC7BC,UAAU,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,MAAM,IAAIP,gBAAgB,IAAIE,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;UACnDC,UAAU,CAACC,cAAc,CAACP,gBAAgB,GAAG,CAAC,CAAC;QACjD;QAEAM,UAAU,CAACE,OAAO,CAACN,SAAS,CAACF,gBAAgB,CAAC,CAAC;MACjD;IACF,CAAC;IAAA,MAEDS,eAAe,GAAG,YAAY;MAC5BH,UAAU,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAAA,MAEDG,qBAAqB,GAAG,UAACC,KAAa,EAAW;MAC/CL,UAAU,CAACC,cAAc,CAACI,KAAK,CAAC;IAClC,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OArCD,kBAAqB;MACnB,OACE,qBAAC,aAAI;QAAC,KAAK,EAAEC,mBAAU,CAACC,YAAa;QAAA,UACnC,qBAAC,wBAAe;UACd,SAAS,EAAE,IAAI,CAACf,cAAe;UAC/B,UAAU,EAAE,IAAI,CAACW,eAAgB;UACjC,qBAAqB,EAAE,IAAI,CAACC,qBAAsB;UAClD,IAAI,EAAE,IAAI,CAACX,KAAK,CAACE,IAAK;UACtB,aAAa,EAAE,IAAI,CAACF,KAAK,CAACC;QAAiB;MAC3C,EACG;IAEX;EAAC;EAAA;AAAA,EAb4Cc,KAAK,CAACC,SAAS;AAAA;AAAA,eAyC9CT,UAAU,CAACU,gBAAgB,CACzCnB,yBAAyB,CAC1B;AAAA"}