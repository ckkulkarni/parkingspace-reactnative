{"version":3,"names":["renderApplication","RootComponent","initialProps","rootTag","WrapperComponent","fabric","showArchitectureIndicator","scopedPerformanceLogger","isLogBox","debugName","displayMode","useConcurrentRoot","useOffscreen","invariant","performanceLogger","GlobalPerformanceLogger","renderable","Object","freeze","__DEV__","RootComponentWithMeaningfulName","getCachedComponentWithDebugName","Offscreen","React","unstable_Offscreen","DisplayMode","VISIBLE","startTimespan","setExtra","Renderer","isProfilingRenderer","renderElement","element","useFabric","Boolean","stopTimespan"],"sources":["renderApplication.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {type DisplayModeType} from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\ntype OffscreenType = React.AbstractComponent<{\n  mode: 'visible' | 'hidden',\n  children: React.Node,\n}>;\n\nexport default function renderApplication<Props: Object>(\n  RootComponent: React.ComponentType<Props>,\n  initialProps: Props,\n  rootTag: any,\n  WrapperComponent?: ?React.ComponentType<any>,\n  fabric?: boolean,\n  showArchitectureIndicator?: boolean,\n  scopedPerformanceLogger?: IPerformanceLogger,\n  isLogBox?: boolean,\n  debugName?: string,\n  displayMode?: ?DisplayModeType,\n  useConcurrentRoot?: boolean,\n  useOffscreen?: boolean,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable: React.MixedElement = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        showArchitectureIndicator={showArchitectureIndicator}\n        WrapperComponent={WrapperComponent}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Offscreen: OffscreenType = React.unstable_Offscreen;\n\n    renderable = (\n      <Offscreen\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Offscreen>\n    );\n  }\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRoot ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRoot),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n"],"mappings":";;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAkC;AAAA;AAAA;AAOnB,SAASA,iBAAiB,CACvCC,aAAyC,EACzCC,YAAmB,EACnBC,OAAY,EACZC,gBAA4C,EAC5CC,MAAgB,EAChBC,yBAAmC,EACnCC,uBAA4C,EAC5CC,QAAkB,EAClBC,SAAkB,EAClBC,WAA8B,EAC9BC,iBAA2B,EAC3BC,YAAsB,EACtB;EACA,IAAAC,kBAAS,EAACV,OAAO,EAAE,8CAA8C,EAAEA,OAAO,CAAC;EAE3E,IAAMW,iBAAiB,GAAGP,uBAAuB,WAAvBA,uBAAuB,GAAIQ,gCAAuB;EAE5E,IAAIC,UAA8B,GAChC,qBAAC,iCAAwB,CAAC,QAAQ;IAAC,KAAK,EAAEF,iBAAkB;IAAA,UAC1D,qBAAC,qBAAY;MACX,OAAO,EAAEX,OAAQ;MACjB,MAAM,EAAEE,MAAO;MACf,yBAAyB,EAAEC,yBAA0B;MACrD,gBAAgB,EAAEF,gBAAiB;MACnC,YAAY,EAAEF,YAAY,WAAZA,YAAY,GAAIe,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAE;MAChD,sBAAsB,EAAEV,QAAS;MAAA,UACjC,qBAAC,aAAa,oBAAKN,YAAY;QAAE,OAAO,EAAEC;MAAQ;IAAG;EACxC,EAElB;EAED,IAAIgB,OAAO,IAAIV,SAAS,EAAE;IACxB,IAAMW,+BAA+B,GAAG,IAAAC,wCAA+B,EAClEZ,SAAS,qBACb;IACDO,UAAU,GACR,qBAAC,+BAA+B;MAAA,UAC7BA;IAAU,EAEd;EACH;EAEA,IAAIJ,YAAY,IAAIF,WAAW,IAAI,IAAI,EAAE;IAGvC,IAAMY,SAAwB,GAAGC,KAAK,CAACC,kBAAkB;IAEzDR,UAAU,GACR,qBAAC,SAAS;MACR,IAAI,EAAEN,WAAW,KAAKe,oBAAW,CAACC,OAAO,GAAG,SAAS,GAAG,QAAS;MAAA,UAChEV;IAAU,EAEd;EACH;EAEAF,iBAAiB,CAACa,aAAa,CAAC,gCAAgC,CAAC;EACjEb,iBAAiB,CAACc,QAAQ,CACxB,yBAAyB,EACzBjB,iBAAiB,GAAG,GAAG,GAAG,GAAG,CAC9B;EACDG,iBAAiB,CAACc,QAAQ,CAAC,iBAAiB,EAAEvB,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;EACjES,iBAAiB,CAACc,QAAQ,CACxB,mBAAmB,EACnBC,QAAQ,CAACC,mBAAmB,EAAE,CAC/B;EACDD,QAAQ,CAACE,aAAa,CAAC;IACrBC,OAAO,EAAEhB,UAAU;IACnBb,OAAO,EAAPA,OAAO;IACP8B,SAAS,EAAEC,OAAO,CAAC7B,MAAM,CAAC;IAC1BM,iBAAiB,EAAEuB,OAAO,CAACvB,iBAAiB;EAC9C,CAAC,CAAC;EACFG,iBAAiB,CAACqB,YAAY,CAAC,gCAAgC,CAAC;AAClE"}