{"version":3,"names":["mock","useNavigation","jest","fn","mockReturnValue","navigate","calculateChargesMock","describe","it","useFakeTimers","details","reg","time","Date","toISOString","render","params","getByTestId","spyOn","PaymentScreen","prototype","mockImplementation","timer","setHours","getHours","advanceTimersByTime","timeSpent","waitFor","expect","props","children","toBe","toHaveBeenCalled"],"sources":["PaymentScreen.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport PaymentScreen from '../PaymentScreen';\r\nimport {render, waitFor} from '@testing-library/react-native';\r\nimport '@testing-library/jest-native/extend-expect';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\nconst calculateChargesMock = jest.fn();\r\ndescribe('Payment Screen/Deregister Parking', () => {\r\n  it('Shows time spent in parking', async () => {\r\n    jest.useFakeTimers();\r\n    const details = {\r\n      reg: 'ABC123',\r\n      time: new Date().toISOString(),\r\n    };\r\n    const {getByTestId} = render(<PaymentScreen route={{params: {details}}} />);\r\n    const calculateChargesMock = jest.fn();\r\n    jest\r\n      .spyOn(PaymentScreen.prototype, 'calculateCharges')\r\n      .mockImplementation(calculateChargesMock);\r\n    const timer = new Date();\r\n    timer.setHours(timer.getHours() - 1);\r\n    details.time = timer.toISOString();\r\n\r\n    jest.advanceTimersByTime(60 * 60 * 1000);\r\n\r\n    const timeSpent = getByTestId('deregester-time-spent');\r\n\r\n    await waitFor(() =>\r\n      expect(timeSpent.props.children[1]).toBe('1 hours 0 minutes'),\r\n    );\r\n\r\n    expect(calculateChargesMock).toHaveBeenCalled();\r\n  });\r\n});\r\n"],"mappings":"AAOA,cAAKA,IAAI,CAAC,0BAA0B,EAAE,YAAM;EAC1C,OAAO;IACLC,aAAa,EAAEC,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;MACvCC,QAAQ,EAAEH,IAAI,CAACC,EAAE;IACnB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAAC;AAAA;AAbH;AACA;AACA;AACA;AAAoD;AAAA;EAAA;IAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAWpD,IAAMG,oBAAoB,GAAGJ,IAAI,CAACC,EAAE,EAAE;AACtCI,QAAQ,CAAC,mCAAmC,EAAE,YAAM;EAClDC,EAAE,CAAC,6BAA6B,kCAAE,aAAY;IAC5CN,IAAI,CAACO,aAAa,EAAE;IACpB,IAAMC,OAAO,GAAG;MACdC,GAAG,EAAE,QAAQ;MACbC,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;IAC9B,CAAC;IACD,cAAsB,IAAAC,mBAAM,EAAC,qBAAC,sBAAa;QAAC,KAAK,EAAE;UAACC,MAAM,EAAE;YAACN,OAAO,EAAPA;UAAO;QAAC;MAAE,EAAG,CAAC;MAApEO,WAAW,WAAXA,WAAW;IAClB,IAAMX,oBAAoB,GAAGJ,IAAI,CAACC,EAAE,EAAE;IACtCD,IAAI,CACDgB,KAAK,CAACC,sBAAa,CAACC,SAAS,EAAE,kBAAkB,CAAC,CAClDC,kBAAkB,CAACf,oBAAoB,CAAC;IAC3C,IAAMgB,KAAK,GAAG,IAAIT,IAAI,EAAE;IACxBS,KAAK,CAACC,QAAQ,CAACD,KAAK,CAACE,QAAQ,EAAE,GAAG,CAAC,CAAC;IACpCd,OAAO,CAACE,IAAI,GAAGU,KAAK,CAACR,WAAW,EAAE;IAElCZ,IAAI,CAACuB,mBAAmB,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAExC,IAAMC,SAAS,GAAGT,WAAW,CAAC,uBAAuB,CAAC;IAEtD,MAAM,IAAAU,oBAAO,EAAC;MAAA,OACZC,MAAM,CAACF,SAAS,CAACG,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,mBAAmB,CAAC;IAAA,EAC9D;IAEDH,MAAM,CAACtB,oBAAoB,CAAC,CAAC0B,gBAAgB,EAAE;EACjD,CAAC,EAAC;AACJ,CAAC,CAAC"}