{"version":3,"names":["ON_END_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","i","length","VirtualizedList","props","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","state","_onUpdateSeparators","keys","newProps","forEach","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_fillRateHelper","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","ChildListCollection","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","zoomScale","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_updateCellsToRenderBatcher","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","invariant","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellLayout","e","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","cellsAroundViewport","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","scrollToIndex","animated","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","perf","infoLog","prevDt","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","setState","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","data","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemCount","getItemLayout","lastFocusedCellRenderer","focusedCellIndex","itemCount","get","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","__isNative","FillRateHelper","Batchinator","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","ViewabilityHelper","viewabilityConfig","onViewableItemsChanged","push","initialRenderRegion","_initialRenderRegion","params","veryLast","scrollTo","console","warn","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","min","abs","EPSILON","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","hasMore","registerAsNestedChild","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","set","has","undefined","_onCellFocusCapture","nestedContext","keyExtractor","defaultKeyExtractor","String","type","displayName","__DEV__","flatStyles","flattenStyle","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","React","isValidElement","_getCellKey","StyleSheet","compose","ListHeaderComponentStyle","cloneElement","event","style","spacerKey","renderRegions","enumerateRegions","lastSpacer","r","isSpacer","section","isLastSpacer","constrainToMeasured","clamp","firstMetrics","lastMetrics","spacerSize","_pushCells","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","renderScrollComponent","ret","scrollContext","nesting","scrollEnabled","error","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","threshold","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","additionalRegions","CellRenderMask","allRegions","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","scrollIndex","cellIdx","itemIdx","prevState","numCells","constrainedCells","StateSafePureComponent","contextType","VirtualizedListContext","create","transform","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {LayoutEvent, ScrollEvent} from '../Types/CoreEventTypes';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  FrameMetricProps,\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\n\nimport RefreshControl from '../Components/RefreshControl/RefreshControl';\nimport ScrollView from '../Components/ScrollView/ScrollView';\nimport View from '../Components/View/View';\nimport Batchinator from '../Interaction/Batchinator';\nimport {findNodeHandle} from '../ReactNative/RendererProxy';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_END_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\nfunction findLastWhere<T>(\n  arr: $ReadOnlyArray<T>,\n  predicate: (element: T) => boolean,\n): T | null {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nexport default class VirtualizedList extends StateSafePureComponent<\n  Props,\n  State,\n> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    const offset =\n      Math.max(\n        0,\n        this._getOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(props.windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      props.getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    invariant(\n      !this.context,\n      'Unexpectedly saw VirtualizedListContext available in ctor',\n    );\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n    };\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const scrollIndex = Math.floor(Math.max(0, props.initialScrollIndex ?? 0));\n\n    return {\n      first: scrollIndex,\n      last:\n        Math.min(\n          itemCount,\n          scrollIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n        ) - 1,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    this._updateViewableItems(props, cellsAroundViewport);\n\n    const {contentLength, offset, visibleLength} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n      // So let's wait until we've scrolled the view to the right place. And until then,\n      // we will trust the initialScrollIndex suggestion.\n\n      // Thus, we want to recalculate the windowed render limits if any of the following hold:\n      // - initialScrollIndex is undefined or is 0\n      // - initialScrollIndex > 0 AND scrolling is complete\n      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\n      //   where the list is shorter than the visible area)\n      if (\n        props.initialScrollIndex &&\n        !this._scrollMetrics.offset &&\n        Math.abs(distanceFromEnd) >= Number.EPSILON\n      ) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this.__getFrameMetricsApprox,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = this._keyExtractor(item, ii, this.props);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          debug={debug}\n          fillRateHelper={this._fillRateHelper}\n          getItemLayout={getItemLayout}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onCellLayout={this._onCellLayout}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={e => this._onCellFocusCapture(key)}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const last = Math.min(itemCount - 1, cells.last);\n\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last,\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n    // $FlowFixMe[missing-local-annot]\n  ) {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n      }\n    }\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._highestMeasuredFrameIndex,\n              )\n            : section.last;\n\n          const firstMetrics = this.__getFrameMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _frames: {\n    [string]: {\n      inLayout?: boolean,\n      index: number,\n      length: number,\n      offset: number,\n    },\n  } = {};\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  // $FlowFixMe[missing-local-annot]\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (e: LayoutEvent, cellKey: string, index: number): void => {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture(cellKey: string) {\n    this._lastFocusedCellKey = cellKey;\n    const renderMask = VirtualizedList._createRenderMask(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._getNonViewportRenderRegions(this.props),\n    );\n\n    this.setState(state => {\n      if (!renderMask.equals(state.renderMask)) {\n        return {renderMask};\n      }\n      return null;\n    });\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {data, getItemCount, onEndReached, onEndReachedThreshold} =\n      this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    let distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distanceFromEnd values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the \"end\" of the list with a distanceFromEnd approximating 0 but not quite there.\n    if (distanceFromEnd < ON_END_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2 when oERT is not present\n    const threshold =\n      onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      distanceFromEnd <= threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        this.scrollToIndex({\n          animated: false,\n          index: this.props.initialScrollIndex,\n        });\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    const scrollingThreshold = (onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this.__getFrameMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: FrameMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: this._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  /**\n   * Gets an approximate offset to an item at a given index. Supports\n   * fractional indices.\n   */\n  _getOffsetApprox = (index: number, props: FrameMetricProps): number => {\n    if (Number.isInteger(index)) {\n      return this.__getFrameMetricsApprox(index, props).offset;\n    } else {\n      const frameMetrics = this.__getFrameMetricsApprox(\n        Math.floor(index),\n        props,\n      );\n      const remainder = index - Math.floor(index);\n      return frameMetrics.offset + remainder * frameMetrics.length;\n    }\n  };\n\n  __getFrameMetricsApprox: (\n    index: number,\n    props: FrameMetricProps,\n  ) => {\n    length: number,\n    offset: number,\n    ...\n  } = (index, props) => {\n    const frame = this._getFrameMetrics(index, props);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {data, getItemCount, getItemLayout} = props;\n      invariant(\n        index >= 0 && index < getItemCount(data),\n        'Tried to get frame for out of range index ' + index,\n      );\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n    props: FrameMetricProps,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItem, getItemCount, getItemLayout} = props;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    const frame = item && this._frames[this._keyExtractor(item, index, props)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n         * suppresses an error found when Flow v0.63 was deployed. To see the error\n         * delete this comment and run Flow. */\n        return getItemLayout(data, index);\n      }\n    }\n    return frame;\n  };\n\n  _getNonViewportRenderRegions = (\n    props: FrameMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The cell may have been unmounted and have a stale index\n    if (\n      focusedCellIndex >= itemCount ||\n      this._indicesToKeys.get(focusedCellIndex) !== this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: FrameMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n"],"mappings":"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"}