{"version":3,"names":["LogBoxInspectorStackFrame","props","frame","onPress","column","parseInt","location","getFileName","file","lineNumber","isNaN","styles","frameContainer","default","pressed","LogBoxStyle","getBackgroundColor","name","collapse","dim","methodName","queryIndex","indexOf","substring","lastIndexOf","length","StyleSheet","create","flexDirection","paddingHorizontal","flex","paddingVertical","borderRadius","lineLocation","color","getTextColor","fontSize","includeFontPadding","lineHeight","fontWeight","fontFamily","Platform","select","android","ios","paddingLeft","line"],"sources":["LogBoxInspectorStackFrame.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport LogBoxButton from './LogBoxButton';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  frame: StackFrame,\n  onPress?: ?(event: PressEvent) => void,\n|}>;\n\nfunction LogBoxInspectorStackFrame(props: Props): React.Node {\n  const {frame, onPress} = props;\n  const column = frame.column != null && parseInt(frame.column, 10);\n  const location =\n    getFileName(frame.file) +\n    (frame.lineNumber != null\n      ? ':' +\n        frame.lineNumber +\n        (column && !isNaN(column) ? ':' + (column + 1) : '')\n      : '');\n  return (\n    <View style={styles.frameContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent',\n        }}\n        onPress={onPress}\n        style={styles.frame}>\n        <Text style={[styles.name, frame.collapse === true && styles.dim]}>\n          {frame.methodName}\n        </Text>\n        <Text\n          ellipsizeMode=\"middle\"\n          numberOfLines={1}\n          style={[styles.location, frame.collapse === true && styles.dim]}>\n          {location}\n        </Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nfunction getFileName(file: ?string) {\n  if (file == null) {\n    return '<unknown>';\n  }\n  const queryIndex = file.indexOf('?');\n  return file.substring(\n    file.lastIndexOf('/') + 1,\n    queryIndex === -1 ? file.length : queryIndex,\n  );\n}\n\nconst styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  lineLocation: {\n    flexDirection: 'row',\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: '300',\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: '300',\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n\nexport default LogBoxInspectorStackFrame;\n"],"mappings":"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"}