{"version":3,"names":["mock","useNavigation","jest","fn","mockReturnValue","navigate","calculateChargesMock","describe","it","details","reg","time","Date","now","toISOString","route","params","render","getByTestId","timeSpentElement","console","log","props","children","expect","toHaveTextContent","parkingChargeElement","markSpaceAsUnoccupiedMock","navigateMock","markSpaceAsUnoccupied","paymentButton","fireEvent","press","waitFor","fetch","toHaveBeenCalled","resultSet","ok","spyOn","global","mockResolvedValueOnce","json","Promise","resolve","toHaveBeenCalledWith"],"sources":["PaymentScreen.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport PaymentScreen from '../PaymentScreen';\r\nimport {render, waitFor, fireEvent} from '@testing-library/react-native';\r\nimport '@testing-library/jest-native/extend-expect';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\ndeclare var global: any;\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\nconst calculateChargesMock = jest.fn();\r\ndescribe('Payment Screen/Deregister Parking', () => {\r\n  it('Displays the time spent', () => {\r\n    const details = {\r\n      reg: 'ABC123',\r\n      time: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\r\n    };\r\n    const route = {params: {details}};\r\n    const {getByTestId} = render(<PaymentScreen route={route} />);\r\n    const timeSpentElement = getByTestId('deregester-time-spent');\r\n    console.log('timeSpentElement:', timeSpentElement.props.children[1]);\r\n    expect(timeSpentElement).toHaveTextContent('Time Spent: 1 hours 0 minutes');\r\n  });\r\n  it('Shows parking charge', () => {\r\n    const details = {\r\n      reg: 'ABC123',\r\n      time: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\r\n    };\r\n    const route = {params: {details}};\r\n    const {getByTestId} = render(<PaymentScreen route={route} />);\r\n    const parkingChargeElement = getByTestId('deregester-charge');\r\n    expect(parkingChargeElement).toHaveTextContent('Parking Charges: $10');\r\n  });\r\n  it('First calls the function marksSpaceAsUnoccupied(), and then navigates back to the previous screen', async () => {\r\n    const markSpaceAsUnoccupiedMock = jest.fn();\r\n    const navigateMock = jest.fn();\r\n    const details = {\r\n      reg: 'ABC123',\r\n      time: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\r\n    };\r\n    const route = {\r\n      params: {details, markSpaceAsUnoccupied: markSpaceAsUnoccupiedMock},\r\n    };\r\n    const {getByTestId} = render(<PaymentScreen route={route} />);\r\n    const paymentButton = getByTestId('deregester-payment-button');\r\n    fireEvent.press(paymentButton);\r\n    await waitFor(() => expect(fetch).toHaveBeenCalled());\r\n    const resultSet = {ok: true};\r\n    jest.spyOn(global, 'fetch').mockResolvedValueOnce({\r\n      ok: true,\r\n      json: () => Promise.resolve({}),\r\n    });\r\n    await waitFor(() =>\r\n      expect(markSpaceAsUnoccupiedMock).toHaveBeenCalledWith(1),\r\n    );\r\n    expect(navigateMock).toHaveBeenCalledWith('Home');\r\n  });\r\n});\r\n"],"mappings":"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"}