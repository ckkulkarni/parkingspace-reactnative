{"version":3,"names":["getCollapseMessage","stackFrames","collapsed","length","collapsedCount","reduce","count","collapse","framePlural","LogBoxInspectorStackFrames","props","React","useState","log","getAvailableStack","some","setCollapsed","getStackList","filter","symbolicated","status","onRetry","stackStyles","hintBox","hintText","StackFrameList","list","map","frame","index","file","lineNumber","openFileInEditor","StackFrameFooter","collapseContainer","default","pressed","LogBoxStyle","getBackgroundColor","onPress","collapseButton","message","StyleSheet","create","section","marginTop","heading","alignItems","flexDirection","paddingHorizontal","marginBottom","headingText","color","getTextColor","flex","fontSize","fontWeight","includeFontPadding","lineHeight","body","paddingBottom","bodyText","marginHorizontal","backgroundColor","paddingVertical","borderRadius","marginLeft"],"sources":["LogBoxInspectorStackFrames.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\nimport type LogBoxLog from '../Data/LogBoxLog';\nimport type {Stack} from '../Data/LogBoxSymbolication';\n\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport LogBoxInspectorSourceMapStatus from './LogBoxInspectorSourceMapStatus';\nimport LogBoxInspectorStackFrame from './LogBoxInspectorStackFrame';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n  onRetry: () => void,\n|}>;\n\nexport function getCollapseMessage(\n  stackFrames: Stack,\n  collapsed: boolean,\n): string {\n  if (stackFrames.length === 0) {\n    return 'No frames to show';\n  }\n\n  const collapsedCount = stackFrames.reduce((count, {collapse}) => {\n    if (collapse === true) {\n      return count + 1;\n    }\n\n    return count;\n  }, 0);\n\n  if (collapsedCount === 0) {\n    return 'Showing all frames';\n  }\n\n  const framePlural = `frame${collapsedCount > 1 ? 's' : ''}`;\n  if (collapsedCount === stackFrames.length) {\n    return collapsed\n      ? `See${\n          collapsedCount > 1 ? ' all ' : ' '\n        }${collapsedCount} collapsed ${framePlural}`\n      : `Collapse${\n          collapsedCount > 1 ? ' all ' : ' '\n        }${collapsedCount} ${framePlural}`;\n  } else {\n    return collapsed\n      ? `See ${collapsedCount} more ${framePlural}`\n      : `Collapse ${collapsedCount} ${framePlural}`;\n  }\n}\n\nfunction LogBoxInspectorStackFrames(props: Props): React.Node {\n  const [collapsed, setCollapsed] = React.useState(() => {\n    // Only collapse frames initially if some frames are not collapsed.\n    return props.log.getAvailableStack().some(({collapse}) => !collapse);\n  });\n\n  function getStackList() {\n    if (collapsed === true) {\n      return props.log.getAvailableStack().filter(({collapse}) => !collapse);\n    } else {\n      return props.log.getAvailableStack();\n    }\n  }\n\n  if (props.log.getAvailableStack().length === 0) {\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection\n      heading=\"Call Stack\"\n      action={\n        <LogBoxInspectorSourceMapStatus\n          onPress={\n            props.log.symbolicated.status === 'FAILED' ? props.onRetry : null\n          }\n          status={props.log.symbolicated.status}\n        />\n      }>\n      {props.log.symbolicated.status !== 'COMPLETE' && (\n        <View style={stackStyles.hintBox}>\n          <Text style={stackStyles.hintText}>\n            This call stack is not symbolicated. Some features are unavailable\n            such as viewing the function name or tapping to open files.\n          </Text>\n        </View>\n      )}\n      <StackFrameList\n        list={getStackList()}\n        status={props.log.symbolicated.status}\n      />\n      <StackFrameFooter\n        onPress={() => setCollapsed(!collapsed)}\n        message={getCollapseMessage(props.log.getAvailableStack(), collapsed)}\n      />\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction StackFrameList(props: {\n  list: Stack | Array<StackFrame>,\n  status: string | 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING',\n}) {\n  return (\n    <>\n      {props.list.map((frame, index) => {\n        const {file, lineNumber} = frame;\n        return (\n          <LogBoxInspectorStackFrame\n            key={index}\n            frame={frame}\n            onPress={\n              props.status === 'COMPLETE' && file != null && lineNumber != null\n                ? () => openFileInEditor(file, lineNumber)\n                : null\n            }\n          />\n        );\n      })}\n    </>\n  );\n}\n\nfunction StackFrameFooter(\n  props: $TEMPORARY$object<{message: string, onPress: () => void}>,\n) {\n  return (\n    <View style={stackStyles.collapseContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundColor(1),\n        }}\n        onPress={props.onPress}\n        style={stackStyles.collapseButton}>\n        <Text style={stackStyles.collapse}>{props.message}</Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst stackStyles = StyleSheet.create({\n  section: {\n    marginTop: 15,\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginBottom: 10,\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 20,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  body: {\n    paddingBottom: 10,\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '500',\n    paddingHorizontal: 27,\n  },\n  hintText: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 13,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    marginHorizontal: 10,\n  },\n  hintBox: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginHorizontal: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row',\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n});\n\nexport default LogBoxInspectorStackFrames;\n"],"mappings":";;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAA+B;AAAA;AAAA;AAOxB,SAASA,kBAAkB,CAChCC,WAAkB,EAClBC,SAAkB,EACV;EACR,IAAID,WAAW,CAACE,MAAM,KAAK,CAAC,EAAE;IAC5B,OAAO,mBAAmB;EAC5B;EAEA,IAAMC,cAAc,GAAGH,WAAW,CAACI,MAAM,CAAC,UAACC,KAAK,QAAiB;IAAA,IAAdC,QAAQ,QAARA,QAAQ;IACzD,IAAIA,QAAQ,KAAK,IAAI,EAAE;MACrB,OAAOD,KAAK,GAAG,CAAC;IAClB;IAEA,OAAOA,KAAK;EACd,CAAC,EAAE,CAAC,CAAC;EAEL,IAAIF,cAAc,KAAK,CAAC,EAAE;IACxB,OAAO,oBAAoB;EAC7B;EAEA,IAAMI,WAAW,cAAWJ,cAAc,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAE;EAC3D,IAAIA,cAAc,KAAKH,WAAW,CAACE,MAAM,EAAE;IACzC,OAAOD,SAAS,YAEVE,cAAc,GAAG,CAAC,GAAG,OAAO,GAAG,GAAG,IACjCA,cAAc,mBAAcI,WAAW,iBAExCJ,cAAc,GAAG,CAAC,GAAG,OAAO,GAAG,GAAG,IACjCA,cAAc,SAAII,WAAa;EACxC,CAAC,MAAM;IACL,OAAON,SAAS,YACLE,cAAc,cAASI,WAAW,iBAC7BJ,cAAc,SAAII,WAAa;EACjD;AACF;AAEA,SAASC,0BAA0B,CAACC,KAAY,EAAc;EAC5D,sBAAkCC,KAAK,CAACC,QAAQ,CAAC,YAAM;MAErD,OAAOF,KAAK,CAACG,GAAG,CAACC,iBAAiB,EAAE,CAACC,IAAI,CAAC;QAAA,IAAER,QAAQ,SAARA,QAAQ;QAAA,OAAM,CAACA,QAAQ;MAAA,EAAC;IACtE,CAAC,CAAC;IAAA;IAHKL,SAAS;IAAEc,YAAY;EAK9B,SAASC,YAAY,GAAG;IACtB,IAAIf,SAAS,KAAK,IAAI,EAAE;MACtB,OAAOQ,KAAK,CAACG,GAAG,CAACC,iBAAiB,EAAE,CAACI,MAAM,CAAC;QAAA,IAAEX,QAAQ,SAARA,QAAQ;QAAA,OAAM,CAACA,QAAQ;MAAA,EAAC;IACxE,CAAC,MAAM;MACL,OAAOG,KAAK,CAACG,GAAG,CAACC,iBAAiB,EAAE;IACtC;EACF;EAEA,IAAIJ,KAAK,CAACG,GAAG,CAACC,iBAAiB,EAAE,CAACX,MAAM,KAAK,CAAC,EAAE;IAC9C,OAAO,IAAI;EACb;EAEA,OACE,sBAAC,+BAAsB;IACrB,OAAO,EAAC,YAAY;IACpB,MAAM,EACJ,qBAAC,uCAA8B;MAC7B,OAAO,EACLO,KAAK,CAACG,GAAG,CAACM,YAAY,CAACC,MAAM,KAAK,QAAQ,GAAGV,KAAK,CAACW,OAAO,GAAG,IAC9D;MACD,MAAM,EAAEX,KAAK,CAACG,GAAG,CAACM,YAAY,CAACC;IAAO,EAEzC;IAAA,WACAV,KAAK,CAACG,GAAG,CAACM,YAAY,CAACC,MAAM,KAAK,UAAU,IAC3C,qBAAC,aAAI;MAAC,KAAK,EAAEE,WAAW,CAACC,OAAQ;MAAA,UAC/B,qBAAC,aAAI;QAAC,KAAK,EAAED,WAAW,CAACE,QAAS;QAAA,UAAC;MAGnC;IAAO,EAEV,EACD,qBAAC,cAAc;MACb,IAAI,EAAEP,YAAY,EAAG;MACrB,MAAM,EAAEP,KAAK,CAACG,GAAG,CAACM,YAAY,CAACC;IAAO,EACtC,EACF,qBAAC,gBAAgB;MACf,OAAO,EAAE;QAAA,OAAMJ,YAAY,CAAC,CAACd,SAAS,CAAC;MAAA,CAAC;MACxC,OAAO,EAAEF,kBAAkB,CAACU,KAAK,CAACG,GAAG,CAACC,iBAAiB,EAAE,EAAEZ,SAAS;IAAE,EACtE;EAAA,EACqB;AAE7B;AAEA,SAASuB,cAAc,CAACf,KAGvB,EAAE;EACD,OACE;IAAA,UACGA,KAAK,CAACgB,IAAI,CAACC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;MAChC,IAAOC,IAAI,GAAgBF,KAAK,CAAzBE,IAAI;QAAEC,UAAU,GAAIH,KAAK,CAAnBG,UAAU;MACvB,OACE,qBAAC,kCAAyB;QAExB,KAAK,EAAEH,KAAM;QACb,OAAO,EACLlB,KAAK,CAACU,MAAM,KAAK,UAAU,IAAIU,IAAI,IAAI,IAAI,IAAIC,UAAU,IAAI,IAAI,GAC7D;UAAA,OAAM,IAAAC,yBAAgB,EAACF,IAAI,EAAEC,UAAU,CAAC;QAAA,IACxC;MACL,GANIF,KAAK,CAOV;IAEN,CAAC;EAAC,EACD;AAEP;AAEA,SAASI,gBAAgB,CACvBvB,KAAgE,EAChE;EACA,OACE,qBAAC,aAAI;IAAC,KAAK,EAAEY,WAAW,CAACY,iBAAkB;IAAA,UACzC,qBAAC,qBAAY;MACX,eAAe,EAAE;QACfC,OAAO,EAAE,aAAa;QACtBC,OAAO,EAAEC,WAAW,CAACC,kBAAkB,CAAC,CAAC;MAC3C,CAAE;MACF,OAAO,EAAE5B,KAAK,CAAC6B,OAAQ;MACvB,KAAK,EAAEjB,WAAW,CAACkB,cAAe;MAAA,UAClC,qBAAC,aAAI;QAAC,KAAK,EAAElB,WAAW,CAACf,QAAS;QAAA,UAAEG,KAAK,CAAC+B;MAAO;IAAQ;EAC5C,EACV;AAEX;AAEA,IAAMnB,WAAW,GAAGoB,mBAAU,CAACC,MAAM,CAAC;EACpCC,OAAO,EAAE;IACPC,SAAS,EAAE;EACb,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE,KAAK;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE;EAChB,CAAC;EACDC,WAAW,EAAE;IACXC,KAAK,EAAEf,WAAW,CAACgB,YAAY,CAAC,CAAC,CAAC;IAClCC,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,kBAAkB,EAAE,KAAK;IACzBC,UAAU,EAAE;EACd,CAAC;EACDC,IAAI,EAAE;IACJC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRT,KAAK,EAAEf,WAAW,CAACgB,YAAY,CAAC,CAAC,CAAC;IAClCE,QAAQ,EAAE,EAAE;IACZE,kBAAkB,EAAE,KAAK;IACzBC,UAAU,EAAE,EAAE;IACdF,UAAU,EAAE,KAAK;IACjBP,iBAAiB,EAAE;EACrB,CAAC;EACDzB,QAAQ,EAAE;IACR4B,KAAK,EAAEf,WAAW,CAACgB,YAAY,CAAC,GAAG,CAAC;IACpCE,QAAQ,EAAE,EAAE;IACZE,kBAAkB,EAAE,KAAK;IACzBC,UAAU,EAAE,EAAE;IACdF,UAAU,EAAE,KAAK;IACjBM,gBAAgB,EAAE;EACpB,CAAC;EACDvC,OAAO,EAAE;IACPwC,eAAe,EAAE1B,WAAW,CAACC,kBAAkB,EAAE;IACjDwB,gBAAgB,EAAE,EAAE;IACpBb,iBAAiB,EAAE,CAAC;IACpBe,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACff,YAAY,EAAE;EAChB,CAAC;EACDhB,iBAAiB,EAAE;IACjBgC,UAAU,EAAE,EAAE;IACdlB,aAAa,EAAE;EACjB,CAAC;EACDR,cAAc,EAAE;IACdyB,YAAY,EAAE;EAChB,CAAC;EACD1D,QAAQ,EAAE;IACR6C,KAAK,EAAEf,WAAW,CAACgB,YAAY,CAAC,GAAG,CAAC;IACpCE,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBE,UAAU,EAAE,EAAE;IACdb,SAAS,EAAE,CAAC;IACZI,iBAAiB,EAAE,EAAE;IACrBe,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAAC,eAEYvD,0BAA0B;AAAA"}