88a408b9705398713596702bd5f05f9b
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: jest.fn().mockReturnValue({
      navigate: jest.fn()
    })
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _ParkingSpace = _interopRequireDefault(require("../ParkingSpace"));
var _reactNative = require("@testing-library/react-native");
var _native = require("@react-navigation/native");
require("@testing-library/jest-native/extend-expect");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var navigation = (0, _native.useNavigation)();
describe('ParkingSpace component', function () {
  it('Clicking on an unoccupied parking space shows parking form', function () {
    var route = {
      params: {
        numspaces: 1
      }
    };
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ParkingSpace.default, {
        route: route
      })),
      getByTestId = _render.getByTestId,
      getByPlaceholderText = _render.getByPlaceholderText,
      getByText = _render.getByText;
    var parkingSpace = getByTestId('parking-space-1');
    _reactNative.fireEvent.press(parkingSpace);
    var parkingTimeButton = getByText('tap to change');
    var carRegistrationInput = getByPlaceholderText('Enter vehicle registration');
    expect(parkingTimeButton).toBeTruthy();
    expect(carRegistrationInput).toBeTruthy();
  });
  it('Submitting parking form marks parking space as occupied', function () {
    var route = {
      params: {
        numspaces: 1
      }
    };
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ParkingSpace.default, {
        route: route
      })),
      getByTestId = _render2.getByTestId,
      getByPlaceholderText = _render2.getByPlaceholderText,
      getByText = _render2.getByText,
      queryByText = _render2.queryByText;
    var parkingSpace = getByTestId('parking-space-1');
    _reactNative.fireEvent.press(parkingSpace);
    var carRegistrationInput = getByPlaceholderText('Enter vehicle registration');
    var submitButton = getByText('Submit');
    _reactNative.fireEvent.changeText(carRegistrationInput, 'ABC123');
    _reactNative.fireEvent.press(submitButton);
    var parkingDetails = getByTestId('parking-space-1').props.children;
    expect(parkingDetails[1].props.children).toBe('ABC123');
    expect(queryByText('tap to change')).toBeNull();
  });
  it('Clicking on an occupied parking space opens payment screen', function () {
    var route = {
      params: {
        numspaces: 1
      }
    };
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ParkingSpace.default, {
        route: route
      })),
      getByTestId = _render3.getByTestId,
      getByPlaceholderText = _render3.getByPlaceholderText,
      getByText = _render3.getByText;
    var parkingSpace = getByTestId('parking-space-1');
    _reactNative.fireEvent.press(parkingSpace);
    var carRegistrationInput = getByPlaceholderText('Enter vehicle registration');
    var submitButton = getByText('Submit');
    _reactNative.fireEvent.changeText(carRegistrationInput, 'ABC123');
    _reactNative.fireEvent.press(submitButton);
    _reactNative.fireEvent.press(parkingSpace);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2NrIiwidXNlTmF2aWdhdGlvbiIsImplc3QiLCJmbiIsIm1vY2tSZXR1cm5WYWx1ZSIsIm5hdmlnYXRlIiwibmF2aWdhdGlvbiIsImRlc2NyaWJlIiwiaXQiLCJyb3V0ZSIsInBhcmFtcyIsIm51bXNwYWNlcyIsInJlbmRlciIsImdldEJ5VGVzdElkIiwiZ2V0QnlQbGFjZWhvbGRlclRleHQiLCJnZXRCeVRleHQiLCJwYXJraW5nU3BhY2UiLCJmaXJlRXZlbnQiLCJwcmVzcyIsInBhcmtpbmdUaW1lQnV0dG9uIiwiY2FyUmVnaXN0cmF0aW9uSW5wdXQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwicXVlcnlCeVRleHQiLCJzdWJtaXRCdXR0b24iLCJjaGFuZ2VUZXh0IiwicGFya2luZ0RldGFpbHMiLCJwcm9wcyIsImNoaWxkcmVuIiwidG9CZSIsInRvQmVOdWxsIl0sInNvdXJjZXMiOlsiUGFya2luZ1NwYWNlLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQYXJraW5nU3BhY2UgZnJvbSAnLi4vUGFya2luZ1NwYWNlJztcclxuaW1wb3J0IHtyZW5kZXIsIGZpcmVFdmVudH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQge05hdGl2ZVN0YWNrTmF2aWdhdGlvblByb3B9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjayc7XHJcbmltcG9ydCB7dXNlTmF2aWdhdGlvbn0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJztcclxuaW1wb3J0ICdAdGVzdGluZy1saWJyYXJ5L2plc3QtbmF0aXZlL2V4dGVuZC1leHBlY3QnO1xyXG5qZXN0Lm1vY2soJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZScsICgpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgdXNlTmF2aWdhdGlvbjogamVzdC5mbigpLm1vY2tSZXR1cm5WYWx1ZSh7XHJcbiAgICAgIG5hdmlnYXRlOiBqZXN0LmZuKCksXHJcbiAgICB9KSxcclxuICB9O1xyXG59KTtcclxuY29uc3QgbmF2aWdhdGlvbiA9IHVzZU5hdmlnYXRpb248TmF0aXZlU3RhY2tOYXZpZ2F0aW9uUHJvcDxhbnk+PigpO1xyXG5kZXNjcmliZSgnUGFya2luZ1NwYWNlIGNvbXBvbmVudCcsICgpID0+IHtcclxuICBpdCgnQ2xpY2tpbmcgb24gYW4gdW5vY2N1cGllZCBwYXJraW5nIHNwYWNlIHNob3dzIHBhcmtpbmcgZm9ybScsICgpID0+IHtcclxuICAgIGNvbnN0IHJvdXRlID0ge3BhcmFtczoge251bXNwYWNlczogMX19O1xyXG4gICAgY29uc3Qge2dldEJ5VGVzdElkLCBnZXRCeVBsYWNlaG9sZGVyVGV4dCwgZ2V0QnlUZXh0fSA9IHJlbmRlcihcclxuICAgICAgPFBhcmtpbmdTcGFjZSByb3V0ZT17cm91dGV9IC8+LFxyXG4gICAgKTtcclxuICAgIGNvbnN0IHBhcmtpbmdTcGFjZSA9IGdldEJ5VGVzdElkKCdwYXJraW5nLXNwYWNlLTEnKTtcclxuICAgIGZpcmVFdmVudC5wcmVzcyhwYXJraW5nU3BhY2UpO1xyXG4gICAgY29uc3QgcGFya2luZ1RpbWVCdXR0b24gPSBnZXRCeVRleHQoJ3RhcCB0byBjaGFuZ2UnKTtcclxuICAgIGNvbnN0IGNhclJlZ2lzdHJhdGlvbklucHV0ID0gZ2V0QnlQbGFjZWhvbGRlclRleHQoXHJcbiAgICAgICdFbnRlciB2ZWhpY2xlIHJlZ2lzdHJhdGlvbicsXHJcbiAgICApO1xyXG4gICAgZXhwZWN0KHBhcmtpbmdUaW1lQnV0dG9uKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoY2FyUmVnaXN0cmF0aW9uSW5wdXQpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ1N1Ym1pdHRpbmcgcGFya2luZyBmb3JtIG1hcmtzIHBhcmtpbmcgc3BhY2UgYXMgb2NjdXBpZWQnLCAoKSA9PiB7XHJcbiAgICBjb25zdCByb3V0ZSA9IHtwYXJhbXM6IHtudW1zcGFjZXM6IDF9fTtcclxuICAgIGNvbnN0IHtnZXRCeVRlc3RJZCwgZ2V0QnlQbGFjZWhvbGRlclRleHQsIGdldEJ5VGV4dCwgcXVlcnlCeVRleHR9ID0gcmVuZGVyKFxyXG4gICAgICA8UGFya2luZ1NwYWNlIHJvdXRlPXtyb3V0ZX0gLz4sXHJcbiAgICApO1xyXG4gICAgY29uc3QgcGFya2luZ1NwYWNlID0gZ2V0QnlUZXN0SWQoJ3Bhcmtpbmctc3BhY2UtMScpO1xyXG4gICAgZmlyZUV2ZW50LnByZXNzKHBhcmtpbmdTcGFjZSk7XHJcbiAgICBjb25zdCBjYXJSZWdpc3RyYXRpb25JbnB1dCA9IGdldEJ5UGxhY2Vob2xkZXJUZXh0KFxyXG4gICAgICAnRW50ZXIgdmVoaWNsZSByZWdpc3RyYXRpb24nLFxyXG4gICAgKTtcclxuICAgIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGdldEJ5VGV4dCgnU3VibWl0Jyk7XHJcbiAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChjYXJSZWdpc3RyYXRpb25JbnB1dCwgJ0FCQzEyMycpO1xyXG4gICAgZmlyZUV2ZW50LnByZXNzKHN1Ym1pdEJ1dHRvbik7XHJcbiAgICBjb25zdCBwYXJraW5nRGV0YWlscyA9IGdldEJ5VGVzdElkKCdwYXJraW5nLXNwYWNlLTEnKS5wcm9wcy5jaGlsZHJlbjtcclxuICAgIGV4cGVjdChwYXJraW5nRGV0YWlsc1sxXS5wcm9wcy5jaGlsZHJlbikudG9CZSgnQUJDMTIzJyk7XHJcbiAgICBleHBlY3QocXVlcnlCeVRleHQoJ3RhcCB0byBjaGFuZ2UnKSkudG9CZU51bGwoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ0NsaWNraW5nIG9uIGFuIG9jY3VwaWVkIHBhcmtpbmcgc3BhY2Ugb3BlbnMgcGF5bWVudCBzY3JlZW4nLCAoKSA9PiB7XHJcbiAgICBjb25zdCByb3V0ZSA9IHtwYXJhbXM6IHtudW1zcGFjZXM6IDF9fTtcclxuICAgIGNvbnN0IHtnZXRCeVRlc3RJZCwgZ2V0QnlQbGFjZWhvbGRlclRleHQsIGdldEJ5VGV4dH0gPSByZW5kZXIoXHJcbiAgICAgIDxQYXJraW5nU3BhY2Ugcm91dGU9e3JvdXRlfSAvPixcclxuICAgICk7XHJcbiAgICBjb25zdCBwYXJraW5nU3BhY2UgPSBnZXRCeVRlc3RJZCgncGFya2luZy1zcGFjZS0xJyk7XHJcbiAgICBmaXJlRXZlbnQucHJlc3MocGFya2luZ1NwYWNlKTtcclxuICAgIGNvbnN0IGNhclJlZ2lzdHJhdGlvbklucHV0ID0gZ2V0QnlQbGFjZWhvbGRlclRleHQoXHJcbiAgICAgICdFbnRlciB2ZWhpY2xlIHJlZ2lzdHJhdGlvbicsXHJcbiAgICApO1xyXG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZ2V0QnlUZXh0KCdTdWJtaXQnKTtcclxuICAgIGZpcmVFdmVudC5jaGFuZ2VUZXh0KGNhclJlZ2lzdHJhdGlvbklucHV0LCAnQUJDMTIzJyk7XHJcbiAgICBmaXJlRXZlbnQucHJlc3Moc3VibWl0QnV0dG9uKTtcclxuICAgIGZpcmVFdmVudC5wcmVzcyhwYXJraW5nU3BhY2UpO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFNQSxjQUFLQSxJQUFJLENBQUMsMEJBQTBCLEVBQUUsWUFBTTtFQUMxQyxPQUFPO0lBQ0xDLGFBQWEsRUFBRUMsSUFBSSxDQUFDQyxFQUFFLEVBQUUsQ0FBQ0MsZUFBZSxDQUFDO01BQ3ZDQyxRQUFRLEVBQUVILElBQUksQ0FBQ0MsRUFBRTtJQUNuQixDQUFDO0VBQ0gsQ0FBQztBQUNILENBQUMsQ0FBQztBQUFDO0FBWkg7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFvRDtBQUFBO0VBQUE7SUFBQTtFQUFBO0lBQUE7RUFBQTtFQUFBO0FBQUE7QUFRcEQsSUFBTUcsVUFBVSxHQUFHLElBQUFMLHFCQUFhLEdBQWtDO0FBQ2xFTSxRQUFRLENBQUMsd0JBQXdCLEVBQUUsWUFBTTtFQUN2Q0MsRUFBRSxDQUFDLDREQUE0RCxFQUFFLFlBQU07SUFDckUsSUFBTUMsS0FBSyxHQUFHO01BQUNDLE1BQU0sRUFBRTtRQUFDQyxTQUFTLEVBQUU7TUFB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