{"version":3,"names":["mock","useNavigation","jest","fn","mockReturnValue","navigate","navigation","describe","it","route","params","numspaces","render","getAllByTestId","parkingSpaces","expect","length","toBe","getByTestId","getByPlaceholderText","getByText","parkingSpace","fireEvent","press","parkingTimeButton","carRegistrationInput","toBeTruthy","queryByText","submitButton","changeText","parkingDetails","props","children","toBeNull"],"sources":["ParkingSpace.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport ParkingSpace from '../ParkingSpace';\r\nimport {render, fireEvent} from '@testing-library/react-native';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport '@testing-library/jest-native/extend-expect';\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\nconst navigation = useNavigation<NativeStackNavigationProp<any>>();\r\ndescribe('ParkingSpace component', () => {\r\n  it('Renders correct number of parking spaces', () => {\r\n    const route = {params: {numspaces: 3}};\r\n    const {getAllByTestId} = render(<ParkingSpace route={route} />);\r\n    const parkingSpaces = getAllByTestId('parking-space');\r\n    expect(parkingSpaces.length).toBe(3);\r\n  });\r\n\r\n  it('Clicking on an unoccupied parking space shows parking form', () => {\r\n    const route = {params: {numspaces: 1}};\r\n    const {getByTestId, getByPlaceholderText, getByText} = render(\r\n      <ParkingSpace route={route} />,\r\n    );\r\n    const parkingSpace = getByTestId('parking-space-1');\r\n    fireEvent.press(parkingSpace);\r\n    const parkingTimeButton = getByText('tap to change');\r\n    const carRegistrationInput = getByPlaceholderText(\r\n      'Enter vehicle registration',\r\n    );\r\n    expect(parkingTimeButton).toBeTruthy();\r\n    expect(carRegistrationInput).toBeTruthy();\r\n  });\r\n\r\n  it('Submitting parking form marks parking space as occupied', () => {\r\n    const route = {params: {numspaces: 1}};\r\n    const {getByTestId, getByPlaceholderText, getByText, queryByText} = render(\r\n      <ParkingSpace route={route} />,\r\n    );\r\n    const parkingSpace = getByTestId('parking-space-1');\r\n    fireEvent.press(parkingSpace);\r\n    const carRegistrationInput = getByPlaceholderText(\r\n      'Enter vehicle registration',\r\n    );\r\n    const submitButton = getByText('Submit');\r\n    fireEvent.changeText(carRegistrationInput, 'ABC123');\r\n    fireEvent.press(submitButton);\r\n    const parkingDetails = getByTestId('parking-space-1').props.children;\r\n    expect(parkingDetails[1].props.children).toBe('ABC123');\r\n    expect(queryByText('tap to change')).toBeNull();\r\n  });\r\n\r\n  it('Clicking on an occupied parking space opens payment screen', () => {\r\n    const route = {params: {numspaces: 1}};\r\n    const {getByTestId, getByPlaceholderText, getByText} = render(\r\n      <ParkingSpace route={route} />,\r\n    );\r\n    const parkingSpace = getByTestId('parking-space-1');\r\n    fireEvent.press(parkingSpace);\r\n    const carRegistrationInput = getByPlaceholderText(\r\n      'Enter vehicle registration',\r\n    );\r\n    const submitButton = getByText('Submit');\r\n    fireEvent.changeText(carRegistrationInput, 'ABC123');\r\n    fireEvent.press(submitButton);\r\n    fireEvent.press(parkingSpace);\r\n  });\r\n});\r\n"],"mappings":"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"}