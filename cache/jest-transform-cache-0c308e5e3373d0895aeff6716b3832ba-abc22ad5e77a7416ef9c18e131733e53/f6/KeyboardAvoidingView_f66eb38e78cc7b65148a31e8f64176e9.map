{"version":3,"names":["KeyboardAvoidingView","props","_frame","_keyboardEvent","_subscriptions","viewRef","_initialFrameHeight","_onKeyboardChange","event","_updateBottomIfNecessary","_onLayout","wasFrameNull","nativeEvent","layout","height","onLayout","setState","bottom","duration","easing","endCoordinates","_relativeKeyboardHeight","state","LayoutAnimation","configureNext","update","type","Types","React","createRef","keyboardFrame","frame","Platform","OS","screenY","AccessibilityInfo","prefersCrossFadeTransitions","keyboardY","keyboardVerticalOffset","behavior","Math","max","y","Keyboard","addListener","forEach","subscription","remove","children","contentContainerStyle","enabled","style","bottomHeight","heightStyle","flex","StyleSheet","compose","paddingBottom","Component"],"sources":["KeyboardAvoidingView.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {\n  ViewLayout,\n  ViewLayoutEvent,\n  ViewProps,\n} from '../View/ViewPropTypes';\nimport type {KeyboardEvent, KeyboardMetrics} from './Keyboard';\n\nimport LayoutAnimation from '../../LayoutAnimation/LayoutAnimation';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport {type EventSubscription} from '../../vendor/emitter/EventEmitter';\nimport AccessibilityInfo from '../AccessibilityInfo/AccessibilityInfo';\nimport View from '../View/View';\nimport Keyboard from './Keyboard';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Specify how to react to the presence of the keyboard.\n   */\n  behavior?: ?('height' | 'position' | 'padding'),\n\n  /**\n   * Style of the content container when `behavior` is 'position'.\n   */\n  contentContainerStyle?: ?ViewStyleProp,\n\n  /**\n   * Controls whether this `KeyboardAvoidingView` instance should take effect.\n   * This is useful when more than one is on the screen. Defaults to true.\n   */\n  enabled?: ?boolean,\n\n  /**\n   * Distance between the top of the user screen and the React Native view. This\n   * may be non-zero in some cases. Defaults to 0.\n   */\n  keyboardVerticalOffset?: number,\n|}>;\n\ntype State = {|\n  bottom: number,\n|};\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n */\nclass KeyboardAvoidingView extends React.Component<Props, State> {\n  _frame: ?ViewLayout = null;\n  _keyboardEvent: ?KeyboardEvent = null;\n  _subscriptions: Array<EventSubscription> = [];\n  viewRef: {current: React.ElementRef<typeof View> | null, ...};\n  _initialFrameHeight: number = 0;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {bottom: 0};\n    this.viewRef = React.createRef();\n  }\n\n  async _relativeKeyboardHeight(\n    keyboardFrame: KeyboardMetrics,\n  ): Promise<number> {\n    const frame = this._frame;\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n\n    // On iOS when Prefer Cross-Fade Transitions is enabled, the keyboard position\n    // & height is reported differently (0 instead of Y position value matching height of frame)\n    if (\n      Platform.OS === 'ios' &&\n      keyboardFrame.screenY === 0 &&\n      (await AccessibilityInfo.prefersCrossFadeTransitions())\n    ) {\n      return 0;\n    }\n\n    const keyboardY =\n      keyboardFrame.screenY - (this.props.keyboardVerticalOffset ?? 0);\n\n    if (this.props.behavior === 'height') {\n      return Math.max(\n        this.state.bottom + frame.y + frame.height - keyboardY,\n        0,\n      );\n    }\n\n    // Calculate the displacement needed for the view such that it\n    // no longer overlaps with the keyboard\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  _onKeyboardChange = (event: ?KeyboardEvent) => {\n    this._keyboardEvent = event;\n    this._updateBottomIfNecessary();\n  };\n\n  _onLayout = async (event: ViewLayoutEvent) => {\n    const wasFrameNull = this._frame == null;\n    this._frame = event.nativeEvent.layout;\n    if (!this._initialFrameHeight) {\n      // save the initial frame height, before the keyboard is visible\n      this._initialFrameHeight = this._frame.height;\n    }\n\n    if (wasFrameNull) {\n      await this._updateBottomIfNecessary();\n    }\n\n    if (this.props.onLayout) {\n      this.props.onLayout(event);\n    }\n  };\n\n  _updateBottomIfNecessary = async () => {\n    if (this._keyboardEvent == null) {\n      this.setState({bottom: 0});\n      return;\n    }\n\n    const {duration, easing, endCoordinates} = this._keyboardEvent;\n    const height = await this._relativeKeyboardHeight(endCoordinates);\n\n    if (this.state.bottom === height) {\n      return;\n    }\n\n    if (duration && easing) {\n      LayoutAnimation.configureNext({\n        // We have to pass the duration equal to minimal accepted duration defined here: RCTLayoutAnimation.m\n        duration: duration > 10 ? duration : 10,\n        update: {\n          duration: duration > 10 ? duration : 10,\n          type: LayoutAnimation.Types[easing] || 'keyboard',\n        },\n      });\n    }\n    this.setState({bottom: height});\n  };\n\n  componentDidMount(): void {\n    if (Platform.OS === 'ios') {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardWillChangeFrame', this._onKeyboardChange),\n      ];\n    } else {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardDidHide', this._onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', this._onKeyboardChange),\n      ];\n    }\n  }\n\n  componentWillUnmount(): void {\n    this._subscriptions.forEach(subscription => {\n      subscription.remove();\n    });\n  }\n\n  render(): React.Node {\n    const {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled = true,\n      // eslint-disable-next-line no-unused-vars\n      keyboardVerticalOffset = 0,\n      style,\n      onLayout,\n      ...props\n    } = this.props;\n    const bottomHeight = enabled === true ? this.state.bottom : 0;\n    switch (behavior) {\n      case 'height':\n        let heightStyle;\n        if (this._frame != null && this.state.bottom > 0) {\n          // Note that we only apply a height change when there is keyboard present,\n          // i.e. this.state.bottom is greater than 0. If we remove that condition,\n          // this.frame.height will never go back to its original value.\n          // When height changes, we need to disable flex.\n          heightStyle = {\n            height: this._initialFrameHeight - bottomHeight,\n            flex: 0,\n          };\n        }\n        return (\n          <View\n            ref={this.viewRef}\n            style={StyleSheet.compose(style, heightStyle)}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      case 'position':\n        return (\n          <View\n            ref={this.viewRef}\n            style={style}\n            onLayout={this._onLayout}\n            {...props}>\n            <View\n              style={StyleSheet.compose(contentContainerStyle, {\n                bottom: bottomHeight,\n              })}>\n              {children}\n            </View>\n          </View>\n        );\n\n      case 'padding':\n        return (\n          <View\n            ref={this.viewRef}\n            style={StyleSheet.compose(style, {paddingBottom: bottomHeight})}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      default:\n        return (\n          <View\n            ref={this.viewRef}\n            onLayout={this._onLayout}\n            style={style}\n            {...props}>\n            {children}\n          </View>\n        );\n    }\n  }\n}\n\nexport default KeyboardAvoidingView;\n"],"mappings":"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"}